// Generated by Trentino TDIL CPP interface generator. do not modify

#ifndef TrentinoExampleBasicPrinterClientH
#define TrentinoExampleBasicPrinterClientH

#include "BasicPrinterClientGlobal.h"

#include <boost/cstdint.hpp>
#include <string>

typedef  boost::int32_t  tint32_t;
typedef  boost::uint32_t  tuint32_t;
typedef  boost::int64_t  tint64_t;
typedef  boost::uint64_t  tuint64_t;

namespace Trentino{
namespace Example{


	//****************************************************************************************************
	//                                         BasicPrinter
	//****************************************************************************************************
	//! \brief 
	//****************************************************************************************************
	class  BasicPrinter{

	public:
	//forward declaration Phone
	class Phone;
	//forward declaration Address
	class Address;
	//forward declaration ComplexNumber
	class ComplexNumber;
	//forward declaration Person
	class Person;
	//forward declaration TupleComplexNumber
	class TupleComplexNumber;
	//forward declaration ValidationException
	class ValidationException;

	public:
	
		//****************************************************************************************************
		//                                         Phone
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  Phone{



		public:
		// constructor and destructor---------------------------------------
			Phone();
			~Phone();

		public:
		// accessors -------------------------------------------------------
			const std::string& home() const;
			void set_home(const std::string& value);
			void set_home(const char* value);
			const std::string& mobile() const;
			void set_mobile(const std::string& value);
			void set_mobile(const char* value);
 
		private:
		//private fields
			std::string home_;
			std::string mobile_;

		}; //class Phone
 
		//****************************************************************************************************
		//                                         Address
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  Address{



		public:
		// constructor and destructor---------------------------------------
			Address();
			~Address();

		public:
		// accessors -------------------------------------------------------
			const std::string& street() const;
			void set_street(const std::string& value);
			void set_street(const char* value);
			void set_phone(Trentino::Example::BasicPrinter::Phone& value);
			const Trentino::Example::BasicPrinter::Phone& phone() const;
		   Trentino::Example::BasicPrinter::Phone& mutable_phone();
			bool has_phone() const;
 
		private:
		//private fields
			std::string street_;
			Trentino::Example::BasicPrinter::Phone phone_;

		}; //class Address
 
		//****************************************************************************************************
		//                                         ComplexNumber
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  ComplexNumber{



		public:
		// constructor and destructor---------------------------------------
			ComplexNumber();
			~ComplexNumber();

		public:
		// accessors -------------------------------------------------------
			void set_a(tint32_t value);
			tint32_t a() const; 
			void set_b(tint32_t value);
			tint32_t b() const; 
 
		private:
		//private fields
			tint32_t a_;
			tint32_t b_;

		}; //class ComplexNumber
 
		//****************************************************************************************************
		//                                         Person
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  Person{



		public:
		// constructor and destructor---------------------------------------
			Person();
			~Person();

		public:
		// accessors -------------------------------------------------------
			void set_addres(Trentino::Example::BasicPrinter::Address& value);
			const Trentino::Example::BasicPrinter::Address& addres() const;
		   Trentino::Example::BasicPrinter::Address& mutable_addres();
			bool has_addres() const;
			const std::string& name() const;
			void set_name(const std::string& value);
			void set_name(const char* value);
			const std::string& surname() const;
			void set_surname(const std::string& value);
			void set_surname(const char* value);
 
		private:
		//private fields
			Trentino::Example::BasicPrinter::Address addres_;
			std::string name_;
			std::string surname_;

		}; //class Person
 
		//****************************************************************************************************
		//                                         TupleComplexNumber
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  TupleComplexNumber{



		public:
		// constructor and destructor---------------------------------------
			TupleComplexNumber();
			~TupleComplexNumber();

		public:
		// accessors -------------------------------------------------------
			void set_a(Trentino::Example::BasicPrinter::ComplexNumber& value);
			const Trentino::Example::BasicPrinter::ComplexNumber& a() const;
		   Trentino::Example::BasicPrinter::ComplexNumber& mutable_a();
			bool has_a() const;
			void set_b(Trentino::Example::BasicPrinter::ComplexNumber& value);
			const Trentino::Example::BasicPrinter::ComplexNumber& b() const;
		   Trentino::Example::BasicPrinter::ComplexNumber& mutable_b();
			bool has_b() const;
 
		private:
		//private fields
			Trentino::Example::BasicPrinter::ComplexNumber a_;
			Trentino::Example::BasicPrinter::ComplexNumber b_;

		}; //class TupleComplexNumber
 
		//****************************************************************************************************
		//                                         ValidationException
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  ValidationException{



		public:
		// constructor and destructor---------------------------------------
			ValidationException();
			~ValidationException();

		public:
		// accessors -------------------------------------------------------
			const std::string& details() const;
			void set_details(const std::string& value);
			void set_details(const char* value);
 
		private:
		//private fields
			std::string details_;

		}; //class ValidationException
 
  //services
	public:
	virtual Trentino::Example::BasicPrinter::ComplexNumber  add (const Trentino::Example::BasicPrinter::ComplexNumber& a,const Trentino::Example::BasicPrinter::ComplexNumber& b) =0;
	virtual tint32_t  addSimple (const tint32_t a,const tint32_t b) =0;
	virtual Trentino::Example::BasicPrinter::ComplexNumber  divide (const Trentino::Example::BasicPrinter::ComplexNumber& a,const Trentino::Example::BasicPrinter::ComplexNumber& b) =0;
	virtual void  multiply (const Trentino::Example::BasicPrinter::ComplexNumber& a,const Trentino::Example::BasicPrinter::ComplexNumber& b, Trentino::Example::BasicPrinter::ComplexNumber& c) =0;
	virtual Trentino::Example::BasicPrinter::ComplexNumber  divide2 (const Trentino::Example::BasicPrinter::TupleComplexNumber& tuple) =0;
	virtual tuint32_t  calculateAge (const Trentino::Example::BasicPrinter::Person& person) throw (Trentino::Example::BasicPrinter::ValidationException)=0;
  
	}; //class BasicPrinter



//********************************************************************************************
//!                             Class Phone
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::Phone::Phone (){ 
}

inline  Trentino::Example::BasicPrinter::Phone::~Phone(){
}
inline  const std::string& Trentino::Example::BasicPrinter::Phone::home() const{
	return home_;
}

inline  void Trentino::Example::BasicPrinter::Phone::set_home(const std::string& value){
  	home_=value;
}

inline  void Trentino::Example::BasicPrinter::Phone::set_home(const char* value){
  	home_= std::string(value);
}

	
inline  const std::string& Trentino::Example::BasicPrinter::Phone::mobile() const{
	return mobile_;
}

inline  void Trentino::Example::BasicPrinter::Phone::set_mobile(const std::string& value){
  	mobile_=value;
}

inline  void Trentino::Example::BasicPrinter::Phone::set_mobile(const char* value){
  	mobile_= std::string(value);
}

	


//********************************************************************************************
//!                             Class Address
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::Address::Address (){ 
}

inline  Trentino::Example::BasicPrinter::Address::~Address(){
}
inline  const std::string& Trentino::Example::BasicPrinter::Address::street() const{
	return street_;
}

inline  void Trentino::Example::BasicPrinter::Address::set_street(const std::string& value){
  	street_=value;
}

inline  void Trentino::Example::BasicPrinter::Address::set_street(const char* value){
  	street_= std::string(value);
}

	

inline  bool Trentino::Example::BasicPrinter::Address::has_phone() const{
        return true;
}


inline  void Trentino::Example::BasicPrinter::Address::set_phone(Trentino::Example::BasicPrinter::Phone& value){
phone_ = value;
}

inline   const Trentino::Example::BasicPrinter::Phone& Trentino::Example::BasicPrinter::Address::phone() const {
		return phone_;
}

inline   Trentino::Example::BasicPrinter::Phone& Trentino::Example::BasicPrinter::Address::mutable_phone(){
  return phone_;
}
	


//********************************************************************************************
//!                             Class ComplexNumber
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::ComplexNumber::ComplexNumber (){ 
}

inline  Trentino::Example::BasicPrinter::ComplexNumber::~ComplexNumber(){
}

inline  tint32_t Trentino::Example::BasicPrinter::ComplexNumber::a() const{
	return a_;
}

inline  void Trentino::Example::BasicPrinter::ComplexNumber::set_a(tint32_t value){
	a_ = value;
}
	

inline  tint32_t Trentino::Example::BasicPrinter::ComplexNumber::b() const{
	return b_;
}

inline  void Trentino::Example::BasicPrinter::ComplexNumber::set_b(tint32_t value){
	b_ = value;
}
	


//********************************************************************************************
//!                             Class Person
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::Person::Person (){ 
}

inline  Trentino::Example::BasicPrinter::Person::~Person(){
}

inline  bool Trentino::Example::BasicPrinter::Person::has_addres() const{
        return true;
}


inline  void Trentino::Example::BasicPrinter::Person::set_addres(Trentino::Example::BasicPrinter::Address& value){
addres_ = value;
}

inline   const Trentino::Example::BasicPrinter::Address& Trentino::Example::BasicPrinter::Person::addres() const {
		return addres_;
}

inline   Trentino::Example::BasicPrinter::Address& Trentino::Example::BasicPrinter::Person::mutable_addres(){
  return addres_;
}
	
inline  const std::string& Trentino::Example::BasicPrinter::Person::name() const{
	return name_;
}

inline  void Trentino::Example::BasicPrinter::Person::set_name(const std::string& value){
  	name_=value;
}

inline  void Trentino::Example::BasicPrinter::Person::set_name(const char* value){
  	name_= std::string(value);
}

	
inline  const std::string& Trentino::Example::BasicPrinter::Person::surname() const{
	return surname_;
}

inline  void Trentino::Example::BasicPrinter::Person::set_surname(const std::string& value){
  	surname_=value;
}

inline  void Trentino::Example::BasicPrinter::Person::set_surname(const char* value){
  	surname_= std::string(value);
}

	


//********************************************************************************************
//!                             Class TupleComplexNumber
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::TupleComplexNumber::TupleComplexNumber (){ 
}

inline  Trentino::Example::BasicPrinter::TupleComplexNumber::~TupleComplexNumber(){
}

inline  bool Trentino::Example::BasicPrinter::TupleComplexNumber::has_a() const{
        return true;
}


inline  void Trentino::Example::BasicPrinter::TupleComplexNumber::set_a(Trentino::Example::BasicPrinter::ComplexNumber& value){
a_ = value;
}

inline   const Trentino::Example::BasicPrinter::ComplexNumber& Trentino::Example::BasicPrinter::TupleComplexNumber::a() const {
		return a_;
}

inline   Trentino::Example::BasicPrinter::ComplexNumber& Trentino::Example::BasicPrinter::TupleComplexNumber::mutable_a(){
  return a_;
}
	

inline  bool Trentino::Example::BasicPrinter::TupleComplexNumber::has_b() const{
        return true;
}


inline  void Trentino::Example::BasicPrinter::TupleComplexNumber::set_b(Trentino::Example::BasicPrinter::ComplexNumber& value){
b_ = value;
}

inline   const Trentino::Example::BasicPrinter::ComplexNumber& Trentino::Example::BasicPrinter::TupleComplexNumber::b() const {
		return b_;
}

inline   Trentino::Example::BasicPrinter::ComplexNumber& Trentino::Example::BasicPrinter::TupleComplexNumber::mutable_b(){
  return b_;
}
	


//********************************************************************************************
//!                             Class ValidationException
//********************************************************************************************
inline  Trentino::Example::BasicPrinter::ValidationException::ValidationException (){ 
}

inline  Trentino::Example::BasicPrinter::ValidationException::~ValidationException(){
}
inline  const std::string& Trentino::Example::BasicPrinter::ValidationException::details() const{
	return details_;
}

inline  void Trentino::Example::BasicPrinter::ValidationException::set_details(const std::string& value){
  	details_=value;
}

inline  void Trentino::Example::BasicPrinter::ValidationException::set_details(const char* value){
  	details_= std::string(value);
}

	


} //namespace Trentino
} //namespace Example



#endif //TrentinoExampleBasicPrinterClientH