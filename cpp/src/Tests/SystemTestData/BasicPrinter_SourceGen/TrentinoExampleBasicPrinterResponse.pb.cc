// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TrentinoExampleBasicPrinterResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
namespace Trentino {
namespace Example {
namespace BasicPrinter {

void protobuf_ShutdownFile_TrentinoExampleBasicPrinterResponse_2eproto() {
  delete BasicPrinterResponse::default_instance_;
  delete BasicPrinterResponse_addResponse::default_instance_;
  delete BasicPrinterResponse_addSimpleResponse::default_instance_;
  delete BasicPrinterResponse_divideResponse::default_instance_;
  delete BasicPrinterResponse_multiplyResponse::default_instance_;
  delete BasicPrinterResponse_divide2Response::default_instance_;
  delete BasicPrinterResponse_calculateAgeResponse::default_instance_;
}

void protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf::Trentino::Example::BasicPrinter::protobuf_AddDesc_TrentinoExampleBasicPrinterTypes_2eproto();
  BasicPrinterResponse::default_instance_ = new BasicPrinterResponse();
  BasicPrinterResponse_addResponse::default_instance_ = new BasicPrinterResponse_addResponse();
  BasicPrinterResponse_addSimpleResponse::default_instance_ = new BasicPrinterResponse_addSimpleResponse();
  BasicPrinterResponse_divideResponse::default_instance_ = new BasicPrinterResponse_divideResponse();
  BasicPrinterResponse_multiplyResponse::default_instance_ = new BasicPrinterResponse_multiplyResponse();
  BasicPrinterResponse_divide2Response::default_instance_ = new BasicPrinterResponse_divide2Response();
  BasicPrinterResponse_calculateAgeResponse::default_instance_ = new BasicPrinterResponse_calculateAgeResponse();
  BasicPrinterResponse::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_addResponse::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_addSimpleResponse::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_divideResponse::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_multiplyResponse::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_divide2Response::default_instance_->InitAsDefaultInstance();
  BasicPrinterResponse_calculateAgeResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TrentinoExampleBasicPrinterResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TrentinoExampleBasicPrinterResponse_2eproto {
  StaticDescriptorInitializer_TrentinoExampleBasicPrinterResponse_2eproto() {
    protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();
  }
} static_descriptor_initializer_TrentinoExampleBasicPrinterResponse_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int BasicPrinterResponse_addResponse::kAddResponseFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_addResponse::BasicPrinterResponse_addResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_addResponse::InitAsDefaultInstance() {
  addresponse_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber*>(&::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::default_instance());
}

BasicPrinterResponse_addResponse::BasicPrinterResponse_addResponse(const BasicPrinterResponse_addResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_addResponse::SharedCtor() {
  _cached_size_ = 0;
  addresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_addResponse::~BasicPrinterResponse_addResponse() {
  SharedDtor();
}

void BasicPrinterResponse_addResponse::SharedDtor() {
  if (this != default_instance_) {
    delete addresponse_;
  }
}

void BasicPrinterResponse_addResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_addResponse& BasicPrinterResponse_addResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_addResponse* BasicPrinterResponse_addResponse::default_instance_ = NULL;

BasicPrinterResponse_addResponse* BasicPrinterResponse_addResponse::New() const {
  return new BasicPrinterResponse_addResponse;
}

void BasicPrinterResponse_addResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_addresponse()) {
      if (addresponse_ != NULL) addresponse_->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_addResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber addResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_addResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber addResponse = 1;
  if (has_addresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->addresponse(), output);
  }
  
}

int BasicPrinterResponse_addResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber addResponse = 1;
    if (has_addresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addresponse());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_addResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_addResponse*>(&from));
}

void BasicPrinterResponse_addResponse::MergeFrom(const BasicPrinterResponse_addResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addresponse()) {
      mutable_addresponse()->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::MergeFrom(from.addresponse());
    }
  }
}

void BasicPrinterResponse_addResponse::CopyFrom(const BasicPrinterResponse_addResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_addResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_addResponse::Swap(BasicPrinterResponse_addResponse* other) {
  if (other != this) {
    std::swap(addresponse_, other->addresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_addResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addResponse";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse_addSimpleResponse::kAddSimpleResponseFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_addSimpleResponse::BasicPrinterResponse_addSimpleResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_addSimpleResponse::InitAsDefaultInstance() {
}

BasicPrinterResponse_addSimpleResponse::BasicPrinterResponse_addSimpleResponse(const BasicPrinterResponse_addSimpleResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_addSimpleResponse::SharedCtor() {
  _cached_size_ = 0;
  addsimpleresponse_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_addSimpleResponse::~BasicPrinterResponse_addSimpleResponse() {
  SharedDtor();
}

void BasicPrinterResponse_addSimpleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BasicPrinterResponse_addSimpleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_addSimpleResponse& BasicPrinterResponse_addSimpleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_addSimpleResponse* BasicPrinterResponse_addSimpleResponse::default_instance_ = NULL;

BasicPrinterResponse_addSimpleResponse* BasicPrinterResponse_addSimpleResponse::New() const {
  return new BasicPrinterResponse_addSimpleResponse;
}

void BasicPrinterResponse_addSimpleResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    addsimpleresponse_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_addSimpleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 addSimpleResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addsimpleresponse_)));
          set_has_addsimpleresponse();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_addSimpleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 addSimpleResponse = 1;
  if (has_addsimpleresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->addsimpleresponse(), output);
  }
  
}

int BasicPrinterResponse_addSimpleResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 addSimpleResponse = 1;
    if (has_addsimpleresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addsimpleresponse());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_addSimpleResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_addSimpleResponse*>(&from));
}

void BasicPrinterResponse_addSimpleResponse::MergeFrom(const BasicPrinterResponse_addSimpleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addsimpleresponse()) {
      set_addsimpleresponse(from.addsimpleresponse());
    }
  }
}

void BasicPrinterResponse_addSimpleResponse::CopyFrom(const BasicPrinterResponse_addSimpleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_addSimpleResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_addSimpleResponse::Swap(BasicPrinterResponse_addSimpleResponse* other) {
  if (other != this) {
    std::swap(addsimpleresponse_, other->addsimpleresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_addSimpleResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addSimpleResponse";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse_divideResponse::kDivideResponseFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_divideResponse::BasicPrinterResponse_divideResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_divideResponse::InitAsDefaultInstance() {
  divideresponse_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber*>(&::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::default_instance());
}

BasicPrinterResponse_divideResponse::BasicPrinterResponse_divideResponse(const BasicPrinterResponse_divideResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_divideResponse::SharedCtor() {
  _cached_size_ = 0;
  divideresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_divideResponse::~BasicPrinterResponse_divideResponse() {
  SharedDtor();
}

void BasicPrinterResponse_divideResponse::SharedDtor() {
  if (this != default_instance_) {
    delete divideresponse_;
  }
}

void BasicPrinterResponse_divideResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_divideResponse& BasicPrinterResponse_divideResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_divideResponse* BasicPrinterResponse_divideResponse::default_instance_ = NULL;

BasicPrinterResponse_divideResponse* BasicPrinterResponse_divideResponse::New() const {
  return new BasicPrinterResponse_divideResponse;
}

void BasicPrinterResponse_divideResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_divideresponse()) {
      if (divideresponse_ != NULL) divideresponse_->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_divideResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divideResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_divideresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_divideResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divideResponse = 1;
  if (has_divideresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->divideresponse(), output);
  }
  
}

int BasicPrinterResponse_divideResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divideResponse = 1;
    if (has_divideresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->divideresponse());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_divideResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_divideResponse*>(&from));
}

void BasicPrinterResponse_divideResponse::MergeFrom(const BasicPrinterResponse_divideResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_divideresponse()) {
      mutable_divideresponse()->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::MergeFrom(from.divideresponse());
    }
  }
}

void BasicPrinterResponse_divideResponse::CopyFrom(const BasicPrinterResponse_divideResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_divideResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_divideResponse::Swap(BasicPrinterResponse_divideResponse* other) {
  if (other != this) {
    std::swap(divideresponse_, other->divideresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_divideResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divideResponse";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse_multiplyResponse::kCFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_multiplyResponse::BasicPrinterResponse_multiplyResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_multiplyResponse::InitAsDefaultInstance() {
  c_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber*>(&::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::default_instance());
}

BasicPrinterResponse_multiplyResponse::BasicPrinterResponse_multiplyResponse(const BasicPrinterResponse_multiplyResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_multiplyResponse::SharedCtor() {
  _cached_size_ = 0;
  c_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_multiplyResponse::~BasicPrinterResponse_multiplyResponse() {
  SharedDtor();
}

void BasicPrinterResponse_multiplyResponse::SharedDtor() {
  if (this != default_instance_) {
    delete c_;
  }
}

void BasicPrinterResponse_multiplyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_multiplyResponse& BasicPrinterResponse_multiplyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_multiplyResponse* BasicPrinterResponse_multiplyResponse::default_instance_ = NULL;

BasicPrinterResponse_multiplyResponse* BasicPrinterResponse_multiplyResponse::New() const {
  return new BasicPrinterResponse_multiplyResponse;
}

void BasicPrinterResponse_multiplyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_c()) {
      if (c_ != NULL) c_->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_multiplyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber c = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_c()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_multiplyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber c = 1;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->c(), output);
  }
  
}

int BasicPrinterResponse_multiplyResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber c = 1;
    if (has_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_multiplyResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_multiplyResponse*>(&from));
}

void BasicPrinterResponse_multiplyResponse::MergeFrom(const BasicPrinterResponse_multiplyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c()) {
      mutable_c()->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::MergeFrom(from.c());
    }
  }
}

void BasicPrinterResponse_multiplyResponse::CopyFrom(const BasicPrinterResponse_multiplyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_multiplyResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_multiplyResponse::Swap(BasicPrinterResponse_multiplyResponse* other) {
  if (other != this) {
    std::swap(c_, other->c_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_multiplyResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.multiplyResponse";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse_divide2Response::kDivide2ResponseFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_divide2Response::BasicPrinterResponse_divide2Response()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_divide2Response::InitAsDefaultInstance() {
  divide2response_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber*>(&::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::default_instance());
}

BasicPrinterResponse_divide2Response::BasicPrinterResponse_divide2Response(const BasicPrinterResponse_divide2Response& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_divide2Response::SharedCtor() {
  _cached_size_ = 0;
  divide2response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_divide2Response::~BasicPrinterResponse_divide2Response() {
  SharedDtor();
}

void BasicPrinterResponse_divide2Response::SharedDtor() {
  if (this != default_instance_) {
    delete divide2response_;
  }
}

void BasicPrinterResponse_divide2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_divide2Response& BasicPrinterResponse_divide2Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_divide2Response* BasicPrinterResponse_divide2Response::default_instance_ = NULL;

BasicPrinterResponse_divide2Response* BasicPrinterResponse_divide2Response::New() const {
  return new BasicPrinterResponse_divide2Response;
}

void BasicPrinterResponse_divide2Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_divide2response()) {
      if (divide2response_ != NULL) divide2response_->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_divide2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divide2Response = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_divide2response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_divide2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divide2Response = 1;
  if (has_divide2response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->divide2response(), output);
  }
  
}

int BasicPrinterResponse_divide2Response::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf.Trentino.Example.BasicPrinter.PB_ComplexNumber divide2Response = 1;
    if (has_divide2response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->divide2response());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_divide2Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_divide2Response*>(&from));
}

void BasicPrinterResponse_divide2Response::MergeFrom(const BasicPrinterResponse_divide2Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_divide2response()) {
      mutable_divide2response()->::protobuf::Trentino::Example::BasicPrinter::PB_ComplexNumber::MergeFrom(from.divide2response());
    }
  }
}

void BasicPrinterResponse_divide2Response::CopyFrom(const BasicPrinterResponse_divide2Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_divide2Response::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_divide2Response::Swap(BasicPrinterResponse_divide2Response* other) {
  if (other != this) {
    std::swap(divide2response_, other->divide2response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_divide2Response::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divide2Response";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse_calculateAgeResponse::kCalculateAgeResponseFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse_calculateAgeResponse::BasicPrinterResponse_calculateAgeResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse_calculateAgeResponse::InitAsDefaultInstance() {
}

BasicPrinterResponse_calculateAgeResponse::BasicPrinterResponse_calculateAgeResponse(const BasicPrinterResponse_calculateAgeResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse_calculateAgeResponse::SharedCtor() {
  _cached_size_ = 0;
  calculateageresponse_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse_calculateAgeResponse::~BasicPrinterResponse_calculateAgeResponse() {
  SharedDtor();
}

void BasicPrinterResponse_calculateAgeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BasicPrinterResponse_calculateAgeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse_calculateAgeResponse& BasicPrinterResponse_calculateAgeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse_calculateAgeResponse* BasicPrinterResponse_calculateAgeResponse::default_instance_ = NULL;

BasicPrinterResponse_calculateAgeResponse* BasicPrinterResponse_calculateAgeResponse::New() const {
  return new BasicPrinterResponse_calculateAgeResponse;
}

void BasicPrinterResponse_calculateAgeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    calculateageresponse_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse_calculateAgeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 calculateAgeResponse = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &calculateageresponse_)));
          set_has_calculateageresponse();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse_calculateAgeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 calculateAgeResponse = 1;
  if (has_calculateageresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->calculateageresponse(), output);
  }
  
}

int BasicPrinterResponse_calculateAgeResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 calculateAgeResponse = 1;
    if (has_calculateageresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->calculateageresponse());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse_calculateAgeResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse_calculateAgeResponse*>(&from));
}

void BasicPrinterResponse_calculateAgeResponse::MergeFrom(const BasicPrinterResponse_calculateAgeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_calculateageresponse()) {
      set_calculateageresponse(from.calculateageresponse());
    }
  }
}

void BasicPrinterResponse_calculateAgeResponse::CopyFrom(const BasicPrinterResponse_calculateAgeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse_calculateAgeResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse_calculateAgeResponse::Swap(BasicPrinterResponse_calculateAgeResponse* other) {
  if (other != this) {
    std::swap(calculateageresponse_, other->calculateageresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse_calculateAgeResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.calculateAgeResponse";
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BasicPrinterResponse::kAddResponseObjectFieldNumber;
const int BasicPrinterResponse::kAddSimpleResponseObjectFieldNumber;
const int BasicPrinterResponse::kDivideResponseObjectFieldNumber;
const int BasicPrinterResponse::kMultiplyResponseObjectFieldNumber;
const int BasicPrinterResponse::kDivide2ResponseObjectFieldNumber;
const int BasicPrinterResponse::kCalculateAgeResponseObjectFieldNumber;
#endif  // !_MSC_VER

BasicPrinterResponse::BasicPrinterResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void BasicPrinterResponse::InitAsDefaultInstance() {
  addresponseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addResponse*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addResponse::default_instance());
  addsimpleresponseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addSimpleResponse*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addSimpleResponse::default_instance());
  divideresponseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divideResponse*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divideResponse::default_instance());
  multiplyresponseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_multiplyResponse*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_multiplyResponse::default_instance());
  divide2responseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divide2Response*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divide2Response::default_instance());
  calculateageresponseobject_ = const_cast< ::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_calculateAgeResponse*>(&::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_calculateAgeResponse::default_instance());
}

BasicPrinterResponse::BasicPrinterResponse(const BasicPrinterResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void BasicPrinterResponse::SharedCtor() {
  _cached_size_ = 0;
  addresponseobject_ = NULL;
  addsimpleresponseobject_ = NULL;
  divideresponseobject_ = NULL;
  multiplyresponseobject_ = NULL;
  divide2responseobject_ = NULL;
  calculateageresponseobject_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicPrinterResponse::~BasicPrinterResponse() {
  SharedDtor();
}

void BasicPrinterResponse::SharedDtor() {
  if (this != default_instance_) {
    delete addresponseobject_;
    delete addsimpleresponseobject_;
    delete divideresponseobject_;
    delete multiplyresponseobject_;
    delete divide2responseobject_;
    delete calculateageresponseobject_;
  }
}

void BasicPrinterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BasicPrinterResponse& BasicPrinterResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TrentinoExampleBasicPrinterResponse_2eproto();  return *default_instance_;
}

BasicPrinterResponse* BasicPrinterResponse::default_instance_ = NULL;

BasicPrinterResponse* BasicPrinterResponse::New() const {
  return new BasicPrinterResponse;
}

void BasicPrinterResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_addresponseobject()) {
      if (addresponseobject_ != NULL) addresponseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addResponse::Clear();
    }
    if (has_addsimpleresponseobject()) {
      if (addsimpleresponseobject_ != NULL) addsimpleresponseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addSimpleResponse::Clear();
    }
    if (has_divideresponseobject()) {
      if (divideresponseobject_ != NULL) divideresponseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divideResponse::Clear();
    }
    if (has_multiplyresponseobject()) {
      if (multiplyresponseobject_ != NULL) multiplyresponseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_multiplyResponse::Clear();
    }
    if (has_divide2responseobject()) {
      if (divide2responseobject_ != NULL) divide2responseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divide2Response::Clear();
    }
    if (has_calculateageresponseobject()) {
      if (calculateageresponseobject_ != NULL) calculateageresponseobject_->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_calculateAgeResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool BasicPrinterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addResponse addResponseObject = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addresponseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_addSimpleResponseObject;
        break;
      }
      
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addSimpleResponse addSimpleResponseObject = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_addSimpleResponseObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addsimpleresponseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_divideResponseObject;
        break;
      }
      
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divideResponse divideResponseObject = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_divideResponseObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_divideresponseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_multiplyResponseObject;
        break;
      }
      
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.multiplyResponse multiplyResponseObject = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_multiplyResponseObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multiplyresponseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_divide2ResponseObject;
        break;
      }
      
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divide2Response divide2ResponseObject = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_divide2ResponseObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_divide2responseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_calculateAgeResponseObject;
        break;
      }
      
      // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.calculateAgeResponse calculateAgeResponseObject = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_calculateAgeResponseObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_calculateageresponseobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BasicPrinterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addResponse addResponseObject = 1;
  if (has_addresponseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->addresponseobject(), output);
  }
  
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addSimpleResponse addSimpleResponseObject = 2;
  if (has_addsimpleresponseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->addsimpleresponseobject(), output);
  }
  
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divideResponse divideResponseObject = 3;
  if (has_divideresponseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->divideresponseobject(), output);
  }
  
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.multiplyResponse multiplyResponseObject = 4;
  if (has_multiplyresponseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->multiplyresponseobject(), output);
  }
  
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divide2Response divide2ResponseObject = 5;
  if (has_divide2responseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->divide2responseobject(), output);
  }
  
  // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.calculateAgeResponse calculateAgeResponseObject = 6;
  if (has_calculateageresponseobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->calculateageresponseobject(), output);
  }
  
}

int BasicPrinterResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addResponse addResponseObject = 1;
    if (has_addresponseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addresponseobject());
    }
    
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.addSimpleResponse addSimpleResponseObject = 2;
    if (has_addsimpleresponseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addsimpleresponseobject());
    }
    
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divideResponse divideResponseObject = 3;
    if (has_divideresponseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->divideresponseobject());
    }
    
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.multiplyResponse multiplyResponseObject = 4;
    if (has_multiplyresponseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->multiplyresponseobject());
    }
    
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.divide2Response divide2ResponseObject = 5;
    if (has_divide2responseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->divide2responseobject());
    }
    
    // optional .protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse.calculateAgeResponse calculateAgeResponseObject = 6;
    if (has_calculateageresponseobject()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->calculateageresponseobject());
    }
    
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicPrinterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BasicPrinterResponse*>(&from));
}

void BasicPrinterResponse::MergeFrom(const BasicPrinterResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addresponseobject()) {
      mutable_addresponseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addResponse::MergeFrom(from.addresponseobject());
    }
    if (from.has_addsimpleresponseobject()) {
      mutable_addsimpleresponseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_addSimpleResponse::MergeFrom(from.addsimpleresponseobject());
    }
    if (from.has_divideresponseobject()) {
      mutable_divideresponseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divideResponse::MergeFrom(from.divideresponseobject());
    }
    if (from.has_multiplyresponseobject()) {
      mutable_multiplyresponseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_multiplyResponse::MergeFrom(from.multiplyresponseobject());
    }
    if (from.has_divide2responseobject()) {
      mutable_divide2responseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_divide2Response::MergeFrom(from.divide2responseobject());
    }
    if (from.has_calculateageresponseobject()) {
      mutable_calculateageresponseobject()->::protobuf::Trentino::Example::BasicPrinter::BasicPrinterResponse_calculateAgeResponse::MergeFrom(from.calculateageresponseobject());
    }
  }
}

void BasicPrinterResponse::CopyFrom(const BasicPrinterResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicPrinterResponse::IsInitialized() const {
  
  return true;
}

void BasicPrinterResponse::Swap(BasicPrinterResponse* other) {
  if (other != this) {
    std::swap(addresponseobject_, other->addresponseobject_);
    std::swap(addsimpleresponseobject_, other->addsimpleresponseobject_);
    std::swap(divideresponseobject_, other->divideresponseobject_);
    std::swap(multiplyresponseobject_, other->multiplyresponseobject_);
    std::swap(divide2responseobject_, other->divide2responseobject_);
    std::swap(calculateageresponseobject_, other->calculateageresponseobject_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BasicPrinterResponse::GetTypeName() const {
  return "protobuf.Trentino.Example.BasicPrinter.BasicPrinterResponse";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BasicPrinter
}  // namespace Example
}  // namespace Trentino
}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
