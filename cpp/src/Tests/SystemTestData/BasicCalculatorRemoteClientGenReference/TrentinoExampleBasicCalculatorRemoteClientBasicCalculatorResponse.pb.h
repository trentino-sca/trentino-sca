// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse.proto

#ifndef PROTOBUF_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto__INCLUDED
#define PROTOBUF_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorTypes.pb.h"
// @@protoc_insertion_point(includes)

namespace Trentino {
namespace Example {
namespace BasicCalculatorRemoteClient {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();

class BasicCalculatorResponse;
class BasicCalculatorResponse_addResponse;
class BasicCalculatorResponse_addSimpleResponse;
class BasicCalculatorResponse_divideResponse;
class BasicCalculatorResponse_multiplyResponse;
class BasicCalculatorResponse_divide2Response;
class BasicCalculatorResponse_calculateAgeResponse;

// ===================================================================

class BasicCalculatorResponse_addResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_addResponse();
  virtual ~BasicCalculatorResponse_addResponse();
  
  BasicCalculatorResponse_addResponse(const BasicCalculatorResponse_addResponse& from);
  
  inline BasicCalculatorResponse_addResponse& operator=(const BasicCalculatorResponse_addResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_addResponse& default_instance();
  
  void Swap(BasicCalculatorResponse_addResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_addResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_addResponse& from);
  void MergeFrom(const BasicCalculatorResponse_addResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber addResponse = 1;
  inline bool has_addresponse() const;
  inline void clear_addresponse();
  static const int kAddResponseFieldNumber = 1;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& addresponse() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* mutable_addresponse();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* release_addresponse();
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addResponse)
 private:
  inline void set_has_addresponse();
  inline void clear_has_addresponse();
  
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* addresponse_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_addResponse* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse_addSimpleResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_addSimpleResponse();
  virtual ~BasicCalculatorResponse_addSimpleResponse();
  
  BasicCalculatorResponse_addSimpleResponse(const BasicCalculatorResponse_addSimpleResponse& from);
  
  inline BasicCalculatorResponse_addSimpleResponse& operator=(const BasicCalculatorResponse_addSimpleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_addSimpleResponse& default_instance();
  
  void Swap(BasicCalculatorResponse_addSimpleResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_addSimpleResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_addSimpleResponse& from);
  void MergeFrom(const BasicCalculatorResponse_addSimpleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 addSimpleResponse = 1;
  inline bool has_addsimpleresponse() const;
  inline void clear_addsimpleresponse();
  static const int kAddSimpleResponseFieldNumber = 1;
  inline ::google::protobuf::int32 addsimpleresponse() const;
  inline void set_addsimpleresponse(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addSimpleResponse)
 private:
  inline void set_has_addsimpleresponse();
  inline void clear_has_addsimpleresponse();
  
  ::google::protobuf::int32 addsimpleresponse_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_addSimpleResponse* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse_divideResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_divideResponse();
  virtual ~BasicCalculatorResponse_divideResponse();
  
  BasicCalculatorResponse_divideResponse(const BasicCalculatorResponse_divideResponse& from);
  
  inline BasicCalculatorResponse_divideResponse& operator=(const BasicCalculatorResponse_divideResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_divideResponse& default_instance();
  
  void Swap(BasicCalculatorResponse_divideResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_divideResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_divideResponse& from);
  void MergeFrom(const BasicCalculatorResponse_divideResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber divideResponse = 1;
  inline bool has_divideresponse() const;
  inline void clear_divideresponse();
  static const int kDivideResponseFieldNumber = 1;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& divideresponse() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* mutable_divideresponse();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* release_divideresponse();
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divideResponse)
 private:
  inline void set_has_divideresponse();
  inline void clear_has_divideresponse();
  
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* divideresponse_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_divideResponse* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse_multiplyResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_multiplyResponse();
  virtual ~BasicCalculatorResponse_multiplyResponse();
  
  BasicCalculatorResponse_multiplyResponse(const BasicCalculatorResponse_multiplyResponse& from);
  
  inline BasicCalculatorResponse_multiplyResponse& operator=(const BasicCalculatorResponse_multiplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_multiplyResponse& default_instance();
  
  void Swap(BasicCalculatorResponse_multiplyResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_multiplyResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_multiplyResponse& from);
  void MergeFrom(const BasicCalculatorResponse_multiplyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber c = 1;
  inline bool has_c() const;
  inline void clear_c();
  static const int kCFieldNumber = 1;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& c() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* mutable_c();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* release_c();
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.multiplyResponse)
 private:
  inline void set_has_c();
  inline void clear_has_c();
  
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* c_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_multiplyResponse* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse_divide2Response : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_divide2Response();
  virtual ~BasicCalculatorResponse_divide2Response();
  
  BasicCalculatorResponse_divide2Response(const BasicCalculatorResponse_divide2Response& from);
  
  inline BasicCalculatorResponse_divide2Response& operator=(const BasicCalculatorResponse_divide2Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_divide2Response& default_instance();
  
  void Swap(BasicCalculatorResponse_divide2Response* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_divide2Response* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_divide2Response& from);
  void MergeFrom(const BasicCalculatorResponse_divide2Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber divide2Response = 1;
  inline bool has_divide2response() const;
  inline void clear_divide2response();
  static const int kDivide2ResponseFieldNumber = 1;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& divide2response() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* mutable_divide2response();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* release_divide2response();
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divide2Response)
 private:
  inline void set_has_divide2response();
  inline void clear_has_divide2response();
  
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* divide2response_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_divide2Response* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse_calculateAgeResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse_calculateAgeResponse();
  virtual ~BasicCalculatorResponse_calculateAgeResponse();
  
  BasicCalculatorResponse_calculateAgeResponse(const BasicCalculatorResponse_calculateAgeResponse& from);
  
  inline BasicCalculatorResponse_calculateAgeResponse& operator=(const BasicCalculatorResponse_calculateAgeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse_calculateAgeResponse& default_instance();
  
  void Swap(BasicCalculatorResponse_calculateAgeResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse_calculateAgeResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse_calculateAgeResponse& from);
  void MergeFrom(const BasicCalculatorResponse_calculateAgeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 calculateAgeResponse = 1;
  inline bool has_calculateageresponse() const;
  inline void clear_calculateageresponse();
  static const int kCalculateAgeResponseFieldNumber = 1;
  inline ::google::protobuf::uint32 calculateageresponse() const;
  inline void set_calculateageresponse(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.calculateAgeResponse)
 private:
  inline void set_has_calculateageresponse();
  inline void clear_has_calculateageresponse();
  
  ::google::protobuf::uint32 calculateageresponse_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse_calculateAgeResponse* default_instance_;
};
// -------------------------------------------------------------------

class BasicCalculatorResponse : public ::google::protobuf::MessageLite {
 public:
  BasicCalculatorResponse();
  virtual ~BasicCalculatorResponse();
  
  BasicCalculatorResponse(const BasicCalculatorResponse& from);
  
  inline BasicCalculatorResponse& operator=(const BasicCalculatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const BasicCalculatorResponse& default_instance();
  
  void Swap(BasicCalculatorResponse* other);
  
  // implements Message ----------------------------------------------
  
  BasicCalculatorResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BasicCalculatorResponse& from);
  void MergeFrom(const BasicCalculatorResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  typedef BasicCalculatorResponse_addResponse addResponse;
  typedef BasicCalculatorResponse_addSimpleResponse addSimpleResponse;
  typedef BasicCalculatorResponse_divideResponse divideResponse;
  typedef BasicCalculatorResponse_multiplyResponse multiplyResponse;
  typedef BasicCalculatorResponse_divide2Response divide2Response;
  typedef BasicCalculatorResponse_calculateAgeResponse calculateAgeResponse;
  
  // accessors -------------------------------------------------------
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addResponse addResponseObject = 1;
  inline bool has_addresponseobject() const;
  inline void clear_addresponseobject();
  static const int kAddResponseObjectFieldNumber = 1;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse& addresponseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* mutable_addresponseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* release_addresponseobject();
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addSimpleResponse addSimpleResponseObject = 2;
  inline bool has_addsimpleresponseobject() const;
  inline void clear_addsimpleresponseobject();
  static const int kAddSimpleResponseObjectFieldNumber = 2;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse& addsimpleresponseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* mutable_addsimpleresponseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* release_addsimpleresponseobject();
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divideResponse divideResponseObject = 3;
  inline bool has_divideresponseobject() const;
  inline void clear_divideresponseobject();
  static const int kDivideResponseObjectFieldNumber = 3;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse& divideresponseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* mutable_divideresponseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* release_divideresponseobject();
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.multiplyResponse multiplyResponseObject = 4;
  inline bool has_multiplyresponseobject() const;
  inline void clear_multiplyresponseobject();
  static const int kMultiplyResponseObjectFieldNumber = 4;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse& multiplyresponseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* mutable_multiplyresponseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* release_multiplyresponseobject();
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divide2Response divide2ResponseObject = 5;
  inline bool has_divide2responseobject() const;
  inline void clear_divide2responseobject();
  static const int kDivide2ResponseObjectFieldNumber = 5;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response& divide2responseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* mutable_divide2responseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* release_divide2responseobject();
  
  // optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.calculateAgeResponse calculateAgeResponseObject = 6;
  inline bool has_calculateageresponseobject() const;
  inline void clear_calculateageresponseobject();
  static const int kCalculateAgeResponseObjectFieldNumber = 6;
  inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse& calculateageresponseobject() const;
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* mutable_calculateageresponseobject();
  inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* release_calculateageresponseobject();
  
  // @@protoc_insertion_point(class_scope:Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse)
 private:
  inline void set_has_addresponseobject();
  inline void clear_has_addresponseobject();
  inline void set_has_addsimpleresponseobject();
  inline void clear_has_addsimpleresponseobject();
  inline void set_has_divideresponseobject();
  inline void clear_has_divideresponseobject();
  inline void set_has_multiplyresponseobject();
  inline void clear_has_multiplyresponseobject();
  inline void set_has_divide2responseobject();
  inline void clear_has_divide2responseobject();
  inline void set_has_calculateageresponseobject();
  inline void clear_has_calculateageresponseobject();
  
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* addresponseobject_;
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* addsimpleresponseobject_;
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* divideresponseobject_;
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* multiplyresponseobject_;
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* divide2responseobject_;
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* calculateageresponseobject_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_AssignDesc_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  friend void protobuf_ShutdownFile_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto();
  
  void InitAsDefaultInstance();
  static BasicCalculatorResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BasicCalculatorResponse_addResponse

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber addResponse = 1;
inline bool BasicCalculatorResponse_addResponse::has_addresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_addResponse::set_has_addresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_addResponse::clear_has_addresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_addResponse::clear_addresponse() {
  if (addresponse_ != NULL) addresponse_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber::Clear();
  clear_has_addresponse();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& BasicCalculatorResponse_addResponse::addresponse() const {
  return addresponse_ != NULL ? *addresponse_ : *default_instance_->addresponse_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_addResponse::mutable_addresponse() {
  set_has_addresponse();
  if (addresponse_ == NULL) addresponse_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber;
  return addresponse_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_addResponse::release_addresponse() {
  clear_has_addresponse();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* temp = addresponse_;
  addresponse_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse_addSimpleResponse

// optional int32 addSimpleResponse = 1;
inline bool BasicCalculatorResponse_addSimpleResponse::has_addsimpleresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_addSimpleResponse::set_has_addsimpleresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_addSimpleResponse::clear_has_addsimpleresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_addSimpleResponse::clear_addsimpleresponse() {
  addsimpleresponse_ = 0;
  clear_has_addsimpleresponse();
}
inline ::google::protobuf::int32 BasicCalculatorResponse_addSimpleResponse::addsimpleresponse() const {
  return addsimpleresponse_;
}
inline void BasicCalculatorResponse_addSimpleResponse::set_addsimpleresponse(::google::protobuf::int32 value) {
  set_has_addsimpleresponse();
  addsimpleresponse_ = value;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse_divideResponse

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber divideResponse = 1;
inline bool BasicCalculatorResponse_divideResponse::has_divideresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_divideResponse::set_has_divideresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_divideResponse::clear_has_divideresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_divideResponse::clear_divideresponse() {
  if (divideresponse_ != NULL) divideresponse_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber::Clear();
  clear_has_divideresponse();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& BasicCalculatorResponse_divideResponse::divideresponse() const {
  return divideresponse_ != NULL ? *divideresponse_ : *default_instance_->divideresponse_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_divideResponse::mutable_divideresponse() {
  set_has_divideresponse();
  if (divideresponse_ == NULL) divideresponse_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber;
  return divideresponse_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_divideResponse::release_divideresponse() {
  clear_has_divideresponse();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* temp = divideresponse_;
  divideresponse_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse_multiplyResponse

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber c = 1;
inline bool BasicCalculatorResponse_multiplyResponse::has_c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_multiplyResponse::set_has_c() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_multiplyResponse::clear_has_c() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_multiplyResponse::clear_c() {
  if (c_ != NULL) c_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber::Clear();
  clear_has_c();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& BasicCalculatorResponse_multiplyResponse::c() const {
  return c_ != NULL ? *c_ : *default_instance_->c_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_multiplyResponse::mutable_c() {
  set_has_c();
  if (c_ == NULL) c_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber;
  return c_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_multiplyResponse::release_c() {
  clear_has_c();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* temp = c_;
  c_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse_divide2Response

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.PB_ComplexNumber divide2Response = 1;
inline bool BasicCalculatorResponse_divide2Response::has_divide2response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_divide2Response::set_has_divide2response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_divide2Response::clear_has_divide2response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_divide2Response::clear_divide2response() {
  if (divide2response_ != NULL) divide2response_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber::Clear();
  clear_has_divide2response();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber& BasicCalculatorResponse_divide2Response::divide2response() const {
  return divide2response_ != NULL ? *divide2response_ : *default_instance_->divide2response_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_divide2Response::mutable_divide2response() {
  set_has_divide2response();
  if (divide2response_ == NULL) divide2response_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber;
  return divide2response_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* BasicCalculatorResponse_divide2Response::release_divide2response() {
  clear_has_divide2response();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::PB_ComplexNumber* temp = divide2response_;
  divide2response_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse_calculateAgeResponse

// optional uint32 calculateAgeResponse = 1;
inline bool BasicCalculatorResponse_calculateAgeResponse::has_calculateageresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse_calculateAgeResponse::set_has_calculateageresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse_calculateAgeResponse::clear_has_calculateageresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse_calculateAgeResponse::clear_calculateageresponse() {
  calculateageresponse_ = 0u;
  clear_has_calculateageresponse();
}
inline ::google::protobuf::uint32 BasicCalculatorResponse_calculateAgeResponse::calculateageresponse() const {
  return calculateageresponse_;
}
inline void BasicCalculatorResponse_calculateAgeResponse::set_calculateageresponse(::google::protobuf::uint32 value) {
  set_has_calculateageresponse();
  calculateageresponse_ = value;
}

// -------------------------------------------------------------------

// BasicCalculatorResponse

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addResponse addResponseObject = 1;
inline bool BasicCalculatorResponse::has_addresponseobject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCalculatorResponse::set_has_addresponseobject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCalculatorResponse::clear_has_addresponseobject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCalculatorResponse::clear_addresponseobject() {
  if (addresponseobject_ != NULL) addresponseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse::Clear();
  clear_has_addresponseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse& BasicCalculatorResponse::addresponseobject() const {
  return addresponseobject_ != NULL ? *addresponseobject_ : *default_instance_->addresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* BasicCalculatorResponse::mutable_addresponseobject() {
  set_has_addresponseobject();
  if (addresponseobject_ == NULL) addresponseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse;
  return addresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* BasicCalculatorResponse::release_addresponseobject() {
  clear_has_addresponseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addResponse* temp = addresponseobject_;
  addresponseobject_ = NULL;
  return temp;
}

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.addSimpleResponse addSimpleResponseObject = 2;
inline bool BasicCalculatorResponse::has_addsimpleresponseobject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicCalculatorResponse::set_has_addsimpleresponseobject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicCalculatorResponse::clear_has_addsimpleresponseobject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicCalculatorResponse::clear_addsimpleresponseobject() {
  if (addsimpleresponseobject_ != NULL) addsimpleresponseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse::Clear();
  clear_has_addsimpleresponseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse& BasicCalculatorResponse::addsimpleresponseobject() const {
  return addsimpleresponseobject_ != NULL ? *addsimpleresponseobject_ : *default_instance_->addsimpleresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* BasicCalculatorResponse::mutable_addsimpleresponseobject() {
  set_has_addsimpleresponseobject();
  if (addsimpleresponseobject_ == NULL) addsimpleresponseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse;
  return addsimpleresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* BasicCalculatorResponse::release_addsimpleresponseobject() {
  clear_has_addsimpleresponseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_addSimpleResponse* temp = addsimpleresponseobject_;
  addsimpleresponseobject_ = NULL;
  return temp;
}

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divideResponse divideResponseObject = 3;
inline bool BasicCalculatorResponse::has_divideresponseobject() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicCalculatorResponse::set_has_divideresponseobject() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicCalculatorResponse::clear_has_divideresponseobject() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicCalculatorResponse::clear_divideresponseobject() {
  if (divideresponseobject_ != NULL) divideresponseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse::Clear();
  clear_has_divideresponseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse& BasicCalculatorResponse::divideresponseobject() const {
  return divideresponseobject_ != NULL ? *divideresponseobject_ : *default_instance_->divideresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* BasicCalculatorResponse::mutable_divideresponseobject() {
  set_has_divideresponseobject();
  if (divideresponseobject_ == NULL) divideresponseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse;
  return divideresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* BasicCalculatorResponse::release_divideresponseobject() {
  clear_has_divideresponseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divideResponse* temp = divideresponseobject_;
  divideresponseobject_ = NULL;
  return temp;
}

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.multiplyResponse multiplyResponseObject = 4;
inline bool BasicCalculatorResponse::has_multiplyresponseobject() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicCalculatorResponse::set_has_multiplyresponseobject() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicCalculatorResponse::clear_has_multiplyresponseobject() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicCalculatorResponse::clear_multiplyresponseobject() {
  if (multiplyresponseobject_ != NULL) multiplyresponseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse::Clear();
  clear_has_multiplyresponseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse& BasicCalculatorResponse::multiplyresponseobject() const {
  return multiplyresponseobject_ != NULL ? *multiplyresponseobject_ : *default_instance_->multiplyresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* BasicCalculatorResponse::mutable_multiplyresponseobject() {
  set_has_multiplyresponseobject();
  if (multiplyresponseobject_ == NULL) multiplyresponseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse;
  return multiplyresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* BasicCalculatorResponse::release_multiplyresponseobject() {
  clear_has_multiplyresponseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_multiplyResponse* temp = multiplyresponseobject_;
  multiplyresponseobject_ = NULL;
  return temp;
}

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.divide2Response divide2ResponseObject = 5;
inline bool BasicCalculatorResponse::has_divide2responseobject() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicCalculatorResponse::set_has_divide2responseobject() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicCalculatorResponse::clear_has_divide2responseobject() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicCalculatorResponse::clear_divide2responseobject() {
  if (divide2responseobject_ != NULL) divide2responseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response::Clear();
  clear_has_divide2responseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response& BasicCalculatorResponse::divide2responseobject() const {
  return divide2responseobject_ != NULL ? *divide2responseobject_ : *default_instance_->divide2responseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* BasicCalculatorResponse::mutable_divide2responseobject() {
  set_has_divide2responseobject();
  if (divide2responseobject_ == NULL) divide2responseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response;
  return divide2responseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* BasicCalculatorResponse::release_divide2responseobject() {
  clear_has_divide2responseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_divide2Response* temp = divide2responseobject_;
  divide2responseobject_ = NULL;
  return temp;
}

// optional .Trentino.Example.BasicCalculatorRemoteClient.protobuf.BasicCalculatorResponse.calculateAgeResponse calculateAgeResponseObject = 6;
inline bool BasicCalculatorResponse::has_calculateageresponseobject() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicCalculatorResponse::set_has_calculateageresponseobject() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicCalculatorResponse::clear_has_calculateageresponseobject() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicCalculatorResponse::clear_calculateageresponseobject() {
  if (calculateageresponseobject_ != NULL) calculateageresponseobject_->::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse::Clear();
  clear_has_calculateageresponseobject();
}
inline const ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse& BasicCalculatorResponse::calculateageresponseobject() const {
  return calculateageresponseobject_ != NULL ? *calculateageresponseobject_ : *default_instance_->calculateageresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* BasicCalculatorResponse::mutable_calculateageresponseobject() {
  set_has_calculateageresponseobject();
  if (calculateageresponseobject_ == NULL) calculateageresponseobject_ = new ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse;
  return calculateageresponseobject_;
}
inline ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* BasicCalculatorResponse::release_calculateageresponseobject() {
  clear_has_calculateageresponseobject();
  ::Trentino::Example::BasicCalculatorRemoteClient::protobuf::BasicCalculatorResponse_calculateAgeResponse* temp = calculateageresponseobject_;
  calculateageresponseobject_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace BasicCalculatorRemoteClient
}  // namespace Example
}  // namespace Trentino

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TrentinoExampleBasicCalculatorRemoteClientBasicCalculatorResponse_2eproto__INCLUDED
