// Generated by Trentino TDIL CPP interface generator. do not modify

#ifndef AppService1H
#define AppService1H

#include <boost/cstdint.hpp>
#include <string>

typedef  boost::int32_t  tint32_t;
typedef  boost::uint32_t  tuint32_t;
typedef  boost::int64_t  tint64_t;
typedef  boost::uint64_t  tuint64_t;

namespace App{


	//****************************************************************************************************
	//                                         AppService1
	//****************************************************************************************************
	//! \brief 
	//****************************************************************************************************
	class  AppService1{

	public:
	//forward declaration MasterRockDodo
	class MasterRockDodo;
	//forward declaration InverterDodo
	class InverterDodo;
	//forward declaration GridCmdDodo
	class GridCmdDodo;
	//forward declaration GridControllerConfigurationDodo
	class GridControllerConfigurationDodo;
	//forward declaration Succette
	class Succette;
	//forward declaration CmdDispatchingDodo
	class CmdDispatchingDodo;

	public:
	
		//****************************************************************************************************
		//                                         MasterRockDodo
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  MasterRockDodo{

		public:
			//****************************************************************************************************
			//                                         RockState
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			enum RockState{
				Booten,
				Ready,
				Loading,
				Unloading,
				Waiting,
				Shutdown,
				Error,
			}; //enum RockState
 
			//****************************************************************************************************
			//                                         ContactState
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			enum ContactState{
				Open,
				Precharging,
				Closed,
			}; //enum ContactState
 
			//****************************************************************************************************
			//                                         MasterModuleDodo
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			class  MasterModuleDodo{



			public:
			// constructor and destructor---------------------------------------
				MasterModuleDodo();
				~MasterModuleDodo();

			public:
			// accessors -------------------------------------------------------
				void set_isValid(bool value);
				bool isValid() const; 
				void set_courant(float value);
				float courant() const; 
				void set_bonbon(float value);
				float bonbon() const; 
				void set_minimumCellcourant(float value);
				float minimumCellcourant() const; 
				void set_maximumCellcourant(float value);
				float maximumCellcourant() const; 
				void set_averageCellcourant(float value);
				float averageCellcourant() const; 
				void set_minimumCellchocolat(float value);
				float minimumCellchocolat() const; 
				void set_maximumCellchocolat(float value);
				float maximumCellchocolat() const; 
				void set_averageCellchocolat(float value);
				float averageCellchocolat() const; 
				void set_inletAirchocolat(float value);
				float inletAirchocolat() const; 
				void set_outletAirchocolat(float value);
				float outletAirchocolat() const; 
				void set_stateOfCharge(float value);
				float stateOfCharge() const; 
				void set_stateOfhealth(tint32_t value);
				tint32_t stateOfhealth() const; 
				void set_overcourant(bool value);
				bool overcourant() const; 
				void set_undercourant(bool value);
				bool undercourant() const; 
				void set_overbonbon(bool value);
				bool overbonbon() const; 
				void set_overchocolat(bool value);
				bool overchocolat() const; 
				void set_underchocolat(bool value);
				bool underchocolat() const; 
				void set_externalError(bool value);
				bool externalError() const; 
 
			private:
			//private fields
				bool isValid_;
				float courant_;
				float bonbon_;
				float minimumCellcourant_;
				float maximumCellcourant_;
				float averageCellcourant_;
				float minimumCellchocolat_;
				float maximumCellchocolat_;
				float averageCellchocolat_;
				float inletAirchocolat_;
				float outletAirchocolat_;
				float stateOfCharge_;
				tint32_t stateOfhealth_;
				bool overcourant_;
				bool undercourant_;
				bool overbonbon_;
				bool overchocolat_;
				bool underchocolat_;
				bool externalError_;

			}; //class MasterModuleDodo
 


		public:
		// constructor and destructor---------------------------------------
			MasterRockDodo();
			~MasterRockDodo();

		public:
		// accessors -------------------------------------------------------
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo1();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo1() const;
			bool has_dodo1() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo2();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo2() const;
			bool has_dodo2() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo3();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo3() const;
			bool has_dodo3() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo4();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo4() const;
			bool has_dodo4() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo5();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo5() const;
			bool has_dodo5() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo6();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo6() const;
			bool has_dodo6() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo7();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo7() const;
			bool has_dodo7() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo8();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo8() const;
			bool has_dodo8() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo9();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo9() const;
			bool has_dodo9() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo10();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo10() const;
			bool has_dodo10() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo11();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo11() const;
			bool has_dodo11() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo12();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo12() const;
			bool has_dodo12() const;
			App::AppService1::MasterRockDodo::MasterModuleDodo* mutable_dodo13();
			App::AppService1::MasterRockDodo::MasterModuleDodo& dodo13() const;
			bool has_dodo13() const;
			void set_courantMax(float value);
			float courantMax() const; 
			void set_courantMin(float value);
			float courantMin() const; 
			void set_courant(float value);
			float courant() const; 
			void set_chargingbonbon(float value);
			float chargingbonbon() const; 
			void set_dischargingbonbon(float value);
			float dischargingbonbon() const; 
			void set_bonbon(float value);
			float bonbon() const; 
			void set_averagebonbon(float value);
			float averagebonbon() const; 
			void set_stateOfCharge(tint32_t value);
			tint32_t stateOfCharge() const; 
			void set_minStateOfCharge(float value);
			float minStateOfCharge() const; 
			void set_maxStateOfCharge(float value);
			float maxStateOfCharge() const; 
			void set_stateOfhealth(tint32_t value);
			tint32_t stateOfhealth() const; 
			void set_timeToFull(tint32_t value);
			tint32_t timeToFull() const; 
			void set_timeToEmpty(tint32_t value);
			tint32_t timeToEmpty() const; 
			void set_chocolatSensor1(tint32_t value);
			tint32_t chocolatSensor1() const; 
			void set_chocolatSensor2(tint32_t value);
			tint32_t chocolatSensor2() const; 
			void set_togglebit(tint32_t value);
			tint32_t togglebit() const; 
			void set_State(App::AppService1::MasterRockDodo::RockState value);
			App::AppService1::MasterRockDodo::RockState State() const; 
			void set_contactState(App::AppService1::MasterRockDodo::ContactState value);
			App::AppService1::MasterRockDodo::ContactState contactState() const; 
			void set_averageCellchocolat(float value);
			float averageCellchocolat() const; 
			void set_minimumCellcourant(float value);
			float minimumCellcourant() const; 
			void set_maximumCellcourant(float value);
			float maximumCellcourant() const; 
			void set_minimumCellchocolat(float value);
			float minimumCellchocolat() const; 
			void set_maximumCellchocolat(float value);
			float maximumCellchocolat() const; 
			void set_minInletAirchocolat(float value);
			float minInletAirchocolat() const; 
			void set_maxOutletAirchocolat(float value);
			float maxOutletAirchocolat() const; 
			void set_overcourant(bool value);
			bool overcourant() const; 
			void set_undercourant(bool value);
			bool undercourant() const; 
			void set_overbonbon(bool value);
			bool overbonbon() const; 
			void set_overchocolat(bool value);
			bool overchocolat() const; 
			void set_underchocolat(bool value);
			bool underchocolat() const; 
			void set_externalError(bool value);
			bool externalError() const; 
			void set_XXXCableUnplugged(bool value);
			bool XXXCableUnplugged() const; 
			void set_selftest(bool value);
			bool selftest() const; 
 
		private:
		//private fields
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo1_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo2_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo3_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo4_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo5_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo6_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo7_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo8_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo9_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo10_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo11_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo12_;
			App::AppService1::MasterRockDodo::MasterModuleDodo* dodo13_;
			float courantMax_;
			float courantMin_;
			float courant_;
			float chargingbonbon_;
			float dischargingbonbon_;
			float bonbon_;
			float averagebonbon_;
			tint32_t stateOfCharge_;
			float minStateOfCharge_;
			float maxStateOfCharge_;
			tint32_t stateOfhealth_;
			tint32_t timeToFull_;
			tint32_t timeToEmpty_;
			tint32_t chocolatSensor1_;
			tint32_t chocolatSensor2_;
			tint32_t togglebit_;
			App::AppService1::MasterRockDodo::RockState State_;
			App::AppService1::MasterRockDodo::ContactState contactState_;
			float averageCellchocolat_;
			float minimumCellcourant_;
			float maximumCellcourant_;
			float minimumCellchocolat_;
			float maximumCellchocolat_;
			float minInletAirchocolat_;
			float maxOutletAirchocolat_;
			bool overcourant_;
			bool undercourant_;
			bool overbonbon_;
			bool overchocolat_;
			bool underchocolat_;
			bool externalError_;
			bool XXXCableUnplugged_;
			bool selftest_;

		}; //class MasterRockDodo
 
		//****************************************************************************************************
		//                                         InverterDodo
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  InverterDodo{



		public:
		// constructor and destructor---------------------------------------
			InverterDodo();
			~InverterDodo();

		public:
		// accessors -------------------------------------------------------
			void set_Frequence(float value);
			float Frequence() const; 
			void set_Activebonbon(float value);
			float Activebonbon() const; 
			void set_Reactivebonbon(float value);
			float Reactivebonbon() const; 
			void set_ActiveXXX(float value);
			float ActiveXXX() const; 
			void set_ReactiveXXX(float value);
			float ReactiveXXX() const; 
			void set_XXXFactor(float value);
			float XXXFactor() const; 
			void set_Circuitcourant(float value);
			float Circuitcourant() const; 
			void set_Networkcourant(float value);
			float Networkcourant() const; 
			void set_Transformatorchocolat(float value);
			float Transformatorchocolat() const; 
			void set_Inverterchocolat(float value);
			float Inverterchocolat() const; 
			void set_IQuadratT(float value);
			float IQuadratT() const; 
			void set_ErrorId(tint32_t value);
			tint32_t ErrorId() const; 
			void set_StateBit(tint32_t value);
			tint32_t StateBit() const; 
 
		private:
		//private fields
			float Frequence_;
			float Activebonbon_;
			float Reactivebonbon_;
			float ActiveXXX_;
			float ReactiveXXX_;
			float XXXFactor_;
			float Circuitcourant_;
			float Networkcourant_;
			float Transformatorchocolat_;
			float Inverterchocolat_;
			float IQuadratT_;
			tint32_t ErrorId_;
			tint32_t StateBit_;

		}; //class InverterDodo
 
		//****************************************************************************************************
		//                                         GridCmdDodo
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  GridCmdDodo{

		public:
			//****************************************************************************************************
			//                                         Phase
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			class  Phase{



			public:
			// constructor and destructor---------------------------------------
				Phase();
				~Phase();

			public:
			// accessors -------------------------------------------------------
				void set_courantMagnitude(float value);
				float courantMagnitude() const; 
				void set_courantAngle(float value);
				float courantAngle() const; 
				void set_bonbonMagnitude(float value);
				float bonbonMagnitude() const; 
				void set_bonbonAngle(float value);
				float bonbonAngle() const; 
 
			private:
			//private fields
				float courantMagnitude_;
				float courantAngle_;
				float bonbonMagnitude_;
				float bonbonAngle_;

			}; //class Phase
 
			//****************************************************************************************************
			//                                         Robotique
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			class  Robotique{



			public:
			// constructor and destructor---------------------------------------
				Robotique();
				~Robotique();

			public:
			// accessors -------------------------------------------------------
				App::AppService1::GridCmdDodo::Phase* mutable_L1();
				App::AppService1::GridCmdDodo::Phase& L1() const;
				bool has_L1() const;
				App::AppService1::GridCmdDodo::Phase* mutable_L2();
				App::AppService1::GridCmdDodo::Phase& L2() const;
				bool has_L2() const;
				App::AppService1::GridCmdDodo::Phase* mutable_L3();
				App::AppService1::GridCmdDodo::Phase& L3() const;
				bool has_L3() const;
 
			private:
			//private fields
				App::AppService1::GridCmdDodo::Phase* L1_;
				App::AppService1::GridCmdDodo::Phase* L2_;
				App::AppService1::GridCmdDodo::Phase* L3_;

			}; //class Robotique
 


		public:
		// constructor and destructor---------------------------------------
			GridCmdDodo();
			~GridCmdDodo();

		public:
		// accessors -------------------------------------------------------
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique1();
			App::AppService1::GridCmdDodo::Robotique& Robotique1() const;
			bool has_Robotique1() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique2();
			App::AppService1::GridCmdDodo::Robotique& Robotique2() const;
			bool has_Robotique2() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique3();
			App::AppService1::GridCmdDodo::Robotique& Robotique3() const;
			bool has_Robotique3() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique4();
			App::AppService1::GridCmdDodo::Robotique& Robotique4() const;
			bool has_Robotique4() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique5();
			App::AppService1::GridCmdDodo::Robotique& Robotique5() const;
			bool has_Robotique5() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique6();
			App::AppService1::GridCmdDodo::Robotique& Robotique6() const;
			bool has_Robotique6() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique7();
			App::AppService1::GridCmdDodo::Robotique& Robotique7() const;
			bool has_Robotique7() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique8();
			App::AppService1::GridCmdDodo::Robotique& Robotique8() const;
			bool has_Robotique8() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique9();
			App::AppService1::GridCmdDodo::Robotique& Robotique9() const;
			bool has_Robotique9() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique10();
			App::AppService1::GridCmdDodo::Robotique& Robotique10() const;
			bool has_Robotique10() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique11();
			App::AppService1::GridCmdDodo::Robotique& Robotique11() const;
			bool has_Robotique11() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique12();
			App::AppService1::GridCmdDodo::Robotique& Robotique12() const;
			bool has_Robotique12() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique13();
			App::AppService1::GridCmdDodo::Robotique& Robotique13() const;
			bool has_Robotique13() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique14();
			App::AppService1::GridCmdDodo::Robotique& Robotique14() const;
			bool has_Robotique14() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique15();
			App::AppService1::GridCmdDodo::Robotique& Robotique15() const;
			bool has_Robotique15() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique16();
			App::AppService1::GridCmdDodo::Robotique& Robotique16() const;
			bool has_Robotique16() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique17();
			App::AppService1::GridCmdDodo::Robotique& Robotique17() const;
			bool has_Robotique17() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique18();
			App::AppService1::GridCmdDodo::Robotique& Robotique18() const;
			bool has_Robotique18() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique19();
			App::AppService1::GridCmdDodo::Robotique& Robotique19() const;
			bool has_Robotique19() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique20();
			App::AppService1::GridCmdDodo::Robotique& Robotique20() const;
			bool has_Robotique20() const;
			App::AppService1::GridCmdDodo::Robotique* mutable_Robotique21();
			App::AppService1::GridCmdDodo::Robotique& Robotique21() const;
			bool has_Robotique21() const;
			void set_UppercourantSetPoint(float value);
			float UppercourantSetPoint() const; 
			void set_LowercourantSetPoint(float value);
			float LowercourantSetPoint() const; 
			void set_MaxchargingActiveXXX(float value);
			float MaxchargingActiveXXX() const; 
			void set_MaxdischargingActiveXXX(float value);
			float MaxdischargingActiveXXX() const; 
			void set_courantL1(float value);
			float courantL1() const; 
			void set_courantL2(float value);
			float courantL2() const; 
			void set_courantL3(float value);
			float courantL3() const; 
			void set_courantUnfilteredL1(float value);
			float courantUnfilteredL1() const; 
			void set_courantUnfilteredL2(float value);
			float courantUnfilteredL2() const; 
			void set_courantUnfilteredL3(float value);
			float courantUnfilteredL3() const; 
			void set_ActiveXXX1(float value);
			float ActiveXXX1() const; 
			void set_ActiveXXX2(float value);
			float ActiveXXX2() const; 
			void set_ActiveXXX3(float value);
			float ActiveXXX3() const; 
			void set_ReactiveXXX1(float value);
			float ReactiveXXX1() const; 
			void set_ReactiveXXX2(float value);
			float ReactiveXXX2() const; 
			void set_ReactiveXXX3(float value);
			float ReactiveXXX3() const; 
			void set_XXXFactor1(float value);
			float XXXFactor1() const; 
			void set_XXXFactor2(float value);
			float XXXFactor2() const; 
			void set_XXXFactor3(float value);
			float XXXFactor3() const; 
			void set_bonbon1(float value);
			float bonbon1() const; 
			void set_bonbon2(float value);
			float bonbon2() const; 
			void set_bonbon3(float value);
			float bonbon3() const; 
			void set_Phi1(float value);
			float Phi1() const; 
			void set_Phi2(float value);
			float Phi2() const; 
			void set_Phi3(float value);
			float Phi3() const; 
			void set_AlphaFactor1(float value);
			float AlphaFactor1() const; 
			void set_AlphaFactor2(float value);
			float AlphaFactor2() const; 
			void set_ActiveXXXWish(float value);
			float ActiveXXXWish() const; 
			void set_bonbonReactiveXXX(float value);
			float bonbonReactiveXXX() const; 
			void set_ActiveXXXCmd(float value);
			float ActiveXXXCmd() const; 
			void set_ReactiveXXXCmd(float value);
			float ReactiveXXXCmd() const; 
 
		private:
		//private fields
			App::AppService1::GridCmdDodo::Robotique* Robotique1_;
			App::AppService1::GridCmdDodo::Robotique* Robotique2_;
			App::AppService1::GridCmdDodo::Robotique* Robotique3_;
			App::AppService1::GridCmdDodo::Robotique* Robotique4_;
			App::AppService1::GridCmdDodo::Robotique* Robotique5_;
			App::AppService1::GridCmdDodo::Robotique* Robotique6_;
			App::AppService1::GridCmdDodo::Robotique* Robotique7_;
			App::AppService1::GridCmdDodo::Robotique* Robotique8_;
			App::AppService1::GridCmdDodo::Robotique* Robotique9_;
			App::AppService1::GridCmdDodo::Robotique* Robotique10_;
			App::AppService1::GridCmdDodo::Robotique* Robotique11_;
			App::AppService1::GridCmdDodo::Robotique* Robotique12_;
			App::AppService1::GridCmdDodo::Robotique* Robotique13_;
			App::AppService1::GridCmdDodo::Robotique* Robotique14_;
			App::AppService1::GridCmdDodo::Robotique* Robotique15_;
			App::AppService1::GridCmdDodo::Robotique* Robotique16_;
			App::AppService1::GridCmdDodo::Robotique* Robotique17_;
			App::AppService1::GridCmdDodo::Robotique* Robotique18_;
			App::AppService1::GridCmdDodo::Robotique* Robotique19_;
			App::AppService1::GridCmdDodo::Robotique* Robotique20_;
			App::AppService1::GridCmdDodo::Robotique* Robotique21_;
			float UppercourantSetPoint_;
			float LowercourantSetPoint_;
			float MaxchargingActiveXXX_;
			float MaxdischargingActiveXXX_;
			float courantL1_;
			float courantL2_;
			float courantL3_;
			float courantUnfilteredL1_;
			float courantUnfilteredL2_;
			float courantUnfilteredL3_;
			float ActiveXXX1_;
			float ActiveXXX2_;
			float ActiveXXX3_;
			float ReactiveXXX1_;
			float ReactiveXXX2_;
			float ReactiveXXX3_;
			float XXXFactor1_;
			float XXXFactor2_;
			float XXXFactor3_;
			float bonbon1_;
			float bonbon2_;
			float bonbon3_;
			float Phi1_;
			float Phi2_;
			float Phi3_;
			float AlphaFactor1_;
			float AlphaFactor2_;
			float ActiveXXXWish_;
			float bonbonReactiveXXX_;
			float ActiveXXXCmd_;
			float ReactiveXXXCmd_;

		}; //class GridCmdDodo
 
		//****************************************************************************************************
		//                                         GridControllerConfigurationDodo
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  GridControllerConfigurationDodo{



		public:
		// constructor and destructor---------------------------------------
			GridControllerConfigurationDodo();
			~GridControllerConfigurationDodo();

		public:
		// accessors -------------------------------------------------------
			void set_AutomaticMode(bool value);
			bool AutomaticMode() const; 
			void set_EnergyControlerActive(bool value);
			bool EnergyControlerActive() const; 
 
		private:
		//private fields
			bool AutomaticMode_;
			bool EnergyControlerActive_;

		}; //class GridControllerConfigurationDodo
 
		//****************************************************************************************************
		//                                         Succette
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  Succette{



		public:
		// constructor and destructor---------------------------------------
			Succette();
			~Succette();

		public:
		// accessors -------------------------------------------------------
			void set_MaxChargingActiveXXXAllowed(float value);
			float MaxChargingActiveXXXAllowed() const; 
			void set_MaxDischargingActiveXXXAllowed(float value);
			float MaxDischargingActiveXXXAllowed() const; 
			void set_SOCChargingThresholdActive(bool value);
			bool SOCChargingThresholdActive() const; 
			void set_chocolatChargingThresholdActive(bool value);
			bool chocolatChargingThresholdActive() const; 
			void set_CellcourantChargingThresholdActive(bool value);
			bool CellcourantChargingThresholdActive() const; 
			void set_SOCDisChargingThresholdActive(bool value);
			bool SOCDisChargingThresholdActive() const; 
			void set_chocolatDisChargingThresholdActive(bool value);
			bool chocolatDisChargingThresholdActive() const; 
			void set_CellcourantDisChargingThresholdActive(bool value);
			bool CellcourantDisChargingThresholdActive() const; 
			void set_bonbonSquareTimeDisChargingThresholdActive(bool value);
			bool bonbonSquareTimeDisChargingThresholdActive() const; 
			void set_bonbonSquareTimeChargingThresholdActive(bool value);
			bool bonbonSquareTimeChargingThresholdActive() const; 
 
		private:
		//private fields
			float MaxChargingActiveXXXAllowed_;
			float MaxDischargingActiveXXXAllowed_;
			bool SOCChargingThresholdActive_;
			bool chocolatChargingThresholdActive_;
			bool CellcourantChargingThresholdActive_;
			bool SOCDisChargingThresholdActive_;
			bool chocolatDisChargingThresholdActive_;
			bool CellcourantDisChargingThresholdActive_;
			bool bonbonSquareTimeDisChargingThresholdActive_;
			bool bonbonSquareTimeChargingThresholdActive_;

		}; //class Succette
 
		//****************************************************************************************************
		//                                         CmdDispatchingDodo
		//****************************************************************************************************
		//! \brief 
		//****************************************************************************************************
		class  CmdDispatchingDodo{

		public:
			//****************************************************************************************************
			//                                         Cmd
			//****************************************************************************************************
			//! \brief 
			//****************************************************************************************************
			class  Cmd{



			public:
			// constructor and destructor---------------------------------------
				Cmd();
				~Cmd();

			public:
			// accessors -------------------------------------------------------
				void set_ActiveXXX(float value);
				float ActiveXXX() const; 
				void set_ReactiveXXX(float value);
				float ReactiveXXX() const; 
 
			private:
			//private fields
				float ActiveXXX_;
				float ReactiveXXX_;

			}; //class Cmd
 


		public:
		// constructor and destructor---------------------------------------
			CmdDispatchingDodo();
			~CmdDispatchingDodo();

		public:
		// accessors -------------------------------------------------------
			void set_ActiveXXX(float value);
			float ActiveXXX() const; 
			void set_ReactiveXXX(float value);
			float ReactiveXXX() const; 
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock1();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock1() const;
			bool has_Rock1() const;
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock2();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock2() const;
			bool has_Rock2() const;
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock3();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock3() const;
			bool has_Rock3() const;
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock4();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock4() const;
			bool has_Rock4() const;
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock5();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock5() const;
			bool has_Rock5() const;
			App::AppService1::CmdDispatchingDodo::Cmd* mutable_Rock6();
			App::AppService1::CmdDispatchingDodo::Cmd& Rock6() const;
			bool has_Rock6() const;
 
		private:
		//private fields
			float ActiveXXX_;
			float ReactiveXXX_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock1_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock2_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock3_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock4_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock5_;
			App::AppService1::CmdDispatchingDodo::Cmd* Rock6_;

		}; //class CmdDispatchingDodo
 
  //services
	public:
	virtual void  archiveInverterDodo (const std::string& RockName,const tint32_t RockId,const std::string& timestamp,const App::AppService1::MasterRockDodo& RockDodo,const App::AppService1::InverterDodo& inverterDodo) =0;
	virtual void  archiveGridDodo (const std::string& informatique,const App::AppService1::GridCmdDodo& gridDodo) =0;
	virtual void  archiveAssetProtectDodo (const std::string& informatique,const tint32_t RockId,const App::AppService1::Succette& assetProtectDodo) =0;
	virtual void  archiveGridControllerConfigurationDodo (const App::AppService1::GridControllerConfigurationDodo& gridControllerConfigurationDodo) =0;
	virtual void  archiveCmdDispatchingDodo (const std::string& informatique,const App::AppService1::CmdDispatchingDodo& dispatchingCommadResult) =0;
  
	}; //class AppService1



//********************************************************************************************
//!                             Class MasterRockDodo
//********************************************************************************************
inline  App::AppService1::MasterRockDodo::MasterRockDodo (){ 
	dodo1_ = NULL;
	dodo2_ = NULL;
	dodo3_ = NULL;
	dodo4_ = NULL;
	dodo5_ = NULL;
	dodo6_ = NULL;
	dodo7_ = NULL;
	dodo8_ = NULL;
	dodo9_ = NULL;
	dodo10_ = NULL;
	dodo11_ = NULL;
	dodo12_ = NULL;
	dodo13_ = NULL;
	courantMax_=-1;
	courantMin_=-1;
	courant_=-1;
	chargingbonbon_=-1;
	dischargingbonbon_=-1;
	bonbon_=-1;
	averagebonbon_=-1;
	minStateOfCharge_=9999;
	maxStateOfCharge_=-1;
	State_=Error;
	contactState_=Open;
	averageCellchocolat_=-1;
	minimumCellcourant_=9999;
	maximumCellcourant_=-1;
	minimumCellchocolat_=9999;
	maximumCellchocolat_=-1;
	minInletAirchocolat_=9999;
	maxOutletAirchocolat_=-1;
	overcourant_=true;
	undercourant_=true;
	overbonbon_=true;
	overchocolat_=true;
	underchocolat_=true;
	externalError_=true;
	XXXCableUnplugged_=true;
	selftest_=true;
}

inline  App::AppService1::MasterRockDodo::~MasterRockDodo(){
	delete dodo1_;
	delete dodo2_;
	delete dodo3_;
	delete dodo4_;
	delete dodo5_;
	delete dodo6_;
	delete dodo7_;
	delete dodo8_;
	delete dodo9_;
	delete dodo10_;
	delete dodo11_;
	delete dodo12_;
	delete dodo13_;
}

inline  bool App::AppService1::MasterRockDodo::has_dodo1() const{
        return dodo1_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo1(){
	if (dodo1_==NULL)
		dodo1_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo1_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo1() const{
 	if (dodo1_ != NULL)
		return *dodo1_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo1_'. Call 'has_dodo1' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo2() const{
        return dodo2_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo2(){
	if (dodo2_==NULL)
		dodo2_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo2_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo2() const{
 	if (dodo2_ != NULL)
		return *dodo2_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo2_'. Call 'has_dodo2' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo3() const{
        return dodo3_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo3(){
	if (dodo3_==NULL)
		dodo3_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo3_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo3() const{
 	if (dodo3_ != NULL)
		return *dodo3_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo3_'. Call 'has_dodo3' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo4() const{
        return dodo4_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo4(){
	if (dodo4_==NULL)
		dodo4_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo4_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo4() const{
 	if (dodo4_ != NULL)
		return *dodo4_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo4_'. Call 'has_dodo4' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo5() const{
        return dodo5_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo5(){
	if (dodo5_==NULL)
		dodo5_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo5_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo5() const{
 	if (dodo5_ != NULL)
		return *dodo5_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo5_'. Call 'has_dodo5' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo6() const{
        return dodo6_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo6(){
	if (dodo6_==NULL)
		dodo6_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo6_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo6() const{
 	if (dodo6_ != NULL)
		return *dodo6_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo6_'. Call 'has_dodo6' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo7() const{
        return dodo7_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo7(){
	if (dodo7_==NULL)
		dodo7_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo7_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo7() const{
 	if (dodo7_ != NULL)
		return *dodo7_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo7_'. Call 'has_dodo7' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo8() const{
        return dodo8_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo8(){
	if (dodo8_==NULL)
		dodo8_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo8_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo8() const{
 	if (dodo8_ != NULL)
		return *dodo8_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo8_'. Call 'has_dodo8' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo9() const{
        return dodo9_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo9(){
	if (dodo9_==NULL)
		dodo9_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo9_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo9() const{
 	if (dodo9_ != NULL)
		return *dodo9_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo9_'. Call 'has_dodo9' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo10() const{
        return dodo10_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo10(){
	if (dodo10_==NULL)
		dodo10_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo10_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo10() const{
 	if (dodo10_ != NULL)
		return *dodo10_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo10_'. Call 'has_dodo10' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo11() const{
        return dodo11_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo11(){
	if (dodo11_==NULL)
		dodo11_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo11_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo11() const{
 	if (dodo11_ != NULL)
		return *dodo11_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo11_'. Call 'has_dodo11' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo12() const{
        return dodo12_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo12(){
	if (dodo12_==NULL)
		dodo12_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo12_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo12() const{
 	if (dodo12_ != NULL)
		return *dodo12_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo12_'. Call 'has_dodo12' first");
}
	

inline  bool App::AppService1::MasterRockDodo::has_dodo13() const{
        return dodo13_ != NULL;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo* App::AppService1::MasterRockDodo::mutable_dodo13(){
	if (dodo13_==NULL)
		dodo13_ = new App::AppService1::MasterRockDodo::MasterModuleDodo;
	return dodo13_;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo& App::AppService1::MasterRockDodo::dodo13() const{
 	if (dodo13_ != NULL)
		return *dodo13_;
    throw std::runtime_error("Trying to access uninitialized member variable 'dodo13_'. Call 'has_dodo13' first");
}
	

inline  float App::AppService1::MasterRockDodo::courantMax() const{
	return courantMax_;
}

inline  void App::AppService1::MasterRockDodo::set_courantMax(float value){
	courantMax_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::courantMin() const{
	return courantMin_;
}

inline  void App::AppService1::MasterRockDodo::set_courantMin(float value){
	courantMin_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::courant() const{
	return courant_;
}

inline  void App::AppService1::MasterRockDodo::set_courant(float value){
	courant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::chargingbonbon() const{
	return chargingbonbon_;
}

inline  void App::AppService1::MasterRockDodo::set_chargingbonbon(float value){
	chargingbonbon_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::dischargingbonbon() const{
	return dischargingbonbon_;
}

inline  void App::AppService1::MasterRockDodo::set_dischargingbonbon(float value){
	dischargingbonbon_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::bonbon() const{
	return bonbon_;
}

inline  void App::AppService1::MasterRockDodo::set_bonbon(float value){
	bonbon_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::averagebonbon() const{
	return averagebonbon_;
}

inline  void App::AppService1::MasterRockDodo::set_averagebonbon(float value){
	averagebonbon_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::stateOfCharge() const{
	return stateOfCharge_;
}

inline  void App::AppService1::MasterRockDodo::set_stateOfCharge(tint32_t value){
	stateOfCharge_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::minStateOfCharge() const{
	return minStateOfCharge_;
}

inline  void App::AppService1::MasterRockDodo::set_minStateOfCharge(float value){
	minStateOfCharge_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::maxStateOfCharge() const{
	return maxStateOfCharge_;
}

inline  void App::AppService1::MasterRockDodo::set_maxStateOfCharge(float value){
	maxStateOfCharge_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::stateOfhealth() const{
	return stateOfhealth_;
}

inline  void App::AppService1::MasterRockDodo::set_stateOfhealth(tint32_t value){
	stateOfhealth_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::timeToFull() const{
	return timeToFull_;
}

inline  void App::AppService1::MasterRockDodo::set_timeToFull(tint32_t value){
	timeToFull_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::timeToEmpty() const{
	return timeToEmpty_;
}

inline  void App::AppService1::MasterRockDodo::set_timeToEmpty(tint32_t value){
	timeToEmpty_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::chocolatSensor1() const{
	return chocolatSensor1_;
}

inline  void App::AppService1::MasterRockDodo::set_chocolatSensor1(tint32_t value){
	chocolatSensor1_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::chocolatSensor2() const{
	return chocolatSensor2_;
}

inline  void App::AppService1::MasterRockDodo::set_chocolatSensor2(tint32_t value){
	chocolatSensor2_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::togglebit() const{
	return togglebit_;
}

inline  void App::AppService1::MasterRockDodo::set_togglebit(tint32_t value){
	togglebit_ = value;
}
	

inline  App::AppService1::MasterRockDodo::RockState App::AppService1::MasterRockDodo::State() const{
	return State_;
}

inline  void App::AppService1::MasterRockDodo::set_State(App::AppService1::MasterRockDodo::RockState value){
	State_ = value;
}
	

inline  App::AppService1::MasterRockDodo::ContactState App::AppService1::MasterRockDodo::contactState() const{
	return contactState_;
}

inline  void App::AppService1::MasterRockDodo::set_contactState(App::AppService1::MasterRockDodo::ContactState value){
	contactState_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::averageCellchocolat() const{
	return averageCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_averageCellchocolat(float value){
	averageCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::minimumCellcourant() const{
	return minimumCellcourant_;
}

inline  void App::AppService1::MasterRockDodo::set_minimumCellcourant(float value){
	minimumCellcourant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::maximumCellcourant() const{
	return maximumCellcourant_;
}

inline  void App::AppService1::MasterRockDodo::set_maximumCellcourant(float value){
	maximumCellcourant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::minimumCellchocolat() const{
	return minimumCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_minimumCellchocolat(float value){
	minimumCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::maximumCellchocolat() const{
	return maximumCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_maximumCellchocolat(float value){
	maximumCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::minInletAirchocolat() const{
	return minInletAirchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_minInletAirchocolat(float value){
	minInletAirchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::maxOutletAirchocolat() const{
	return maxOutletAirchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_maxOutletAirchocolat(float value){
	maxOutletAirchocolat_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::overcourant() const{
	return overcourant_;
}

inline  void App::AppService1::MasterRockDodo::set_overcourant(bool value){
	overcourant_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::undercourant() const{
	return undercourant_;
}

inline  void App::AppService1::MasterRockDodo::set_undercourant(bool value){
	undercourant_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::overbonbon() const{
	return overbonbon_;
}

inline  void App::AppService1::MasterRockDodo::set_overbonbon(bool value){
	overbonbon_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::overchocolat() const{
	return overchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_overchocolat(bool value){
	overchocolat_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::underchocolat() const{
	return underchocolat_;
}

inline  void App::AppService1::MasterRockDodo::set_underchocolat(bool value){
	underchocolat_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::externalError() const{
	return externalError_;
}

inline  void App::AppService1::MasterRockDodo::set_externalError(bool value){
	externalError_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::XXXCableUnplugged() const{
	return XXXCableUnplugged_;
}

inline  void App::AppService1::MasterRockDodo::set_XXXCableUnplugged(bool value){
	XXXCableUnplugged_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::selftest() const{
	return selftest_;
}

inline  void App::AppService1::MasterRockDodo::set_selftest(bool value){
	selftest_ = value;
}
	


//********************************************************************************************
//!                             Class MasterModuleDodo
//********************************************************************************************
inline  App::AppService1::MasterRockDodo::MasterModuleDodo::MasterModuleDodo (){ 
	isValid_=true;
	courant_=-1;
	bonbon_=-1;
	minimumCellcourant_=-1;
	maximumCellcourant_=-1;
	averageCellcourant_=-1;
	minimumCellchocolat_=-1;
	maximumCellchocolat_=-1;
	averageCellchocolat_=-1;
	inletAirchocolat_=-1;
	outletAirchocolat_=-1;
	stateOfCharge_=-1;
	overcourant_=true;
	undercourant_=true;
	overbonbon_=true;
	overchocolat_=true;
	underchocolat_=true;
	externalError_=true;
}

inline  App::AppService1::MasterRockDodo::MasterModuleDodo::~MasterModuleDodo(){
}

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::isValid() const{
	return isValid_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_isValid(bool value){
	isValid_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::courant() const{
	return courant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_courant(float value){
	courant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::bonbon() const{
	return bonbon_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_bonbon(float value){
	bonbon_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::minimumCellcourant() const{
	return minimumCellcourant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_minimumCellcourant(float value){
	minimumCellcourant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::maximumCellcourant() const{
	return maximumCellcourant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_maximumCellcourant(float value){
	maximumCellcourant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::averageCellcourant() const{
	return averageCellcourant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_averageCellcourant(float value){
	averageCellcourant_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::minimumCellchocolat() const{
	return minimumCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_minimumCellchocolat(float value){
	minimumCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::maximumCellchocolat() const{
	return maximumCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_maximumCellchocolat(float value){
	maximumCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::averageCellchocolat() const{
	return averageCellchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_averageCellchocolat(float value){
	averageCellchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::inletAirchocolat() const{
	return inletAirchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_inletAirchocolat(float value){
	inletAirchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::outletAirchocolat() const{
	return outletAirchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_outletAirchocolat(float value){
	outletAirchocolat_ = value;
}
	

inline  float App::AppService1::MasterRockDodo::MasterModuleDodo::stateOfCharge() const{
	return stateOfCharge_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_stateOfCharge(float value){
	stateOfCharge_ = value;
}
	

inline  tint32_t App::AppService1::MasterRockDodo::MasterModuleDodo::stateOfhealth() const{
	return stateOfhealth_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_stateOfhealth(tint32_t value){
	stateOfhealth_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::overcourant() const{
	return overcourant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_overcourant(bool value){
	overcourant_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::undercourant() const{
	return undercourant_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_undercourant(bool value){
	undercourant_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::overbonbon() const{
	return overbonbon_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_overbonbon(bool value){
	overbonbon_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::overchocolat() const{
	return overchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_overchocolat(bool value){
	overchocolat_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::underchocolat() const{
	return underchocolat_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_underchocolat(bool value){
	underchocolat_ = value;
}
	

inline  bool App::AppService1::MasterRockDodo::MasterModuleDodo::externalError() const{
	return externalError_;
}

inline  void App::AppService1::MasterRockDodo::MasterModuleDodo::set_externalError(bool value){
	externalError_ = value;
}
	


//********************************************************************************************
//!                             Class InverterDodo
//********************************************************************************************
inline  App::AppService1::InverterDodo::InverterDodo (){ 
	Frequence_=-1;
	Activebonbon_=-1;
	Reactivebonbon_=-1;
	ActiveXXX_=-1;
	ReactiveXXX_=-1;
	XXXFactor_=-1;
	Circuitcourant_=-1;
	Networkcourant_=-1;
	Transformatorchocolat_=-1;
	Inverterchocolat_=-1;
	IQuadratT_=-1;
	ErrorId_=-1;
	StateBit_=-1;
}

inline  App::AppService1::InverterDodo::~InverterDodo(){
}

inline  float App::AppService1::InverterDodo::Frequence() const{
	return Frequence_;
}

inline  void App::AppService1::InverterDodo::set_Frequence(float value){
	Frequence_ = value;
}
	

inline  float App::AppService1::InverterDodo::Activebonbon() const{
	return Activebonbon_;
}

inline  void App::AppService1::InverterDodo::set_Activebonbon(float value){
	Activebonbon_ = value;
}
	

inline  float App::AppService1::InverterDodo::Reactivebonbon() const{
	return Reactivebonbon_;
}

inline  void App::AppService1::InverterDodo::set_Reactivebonbon(float value){
	Reactivebonbon_ = value;
}
	

inline  float App::AppService1::InverterDodo::ActiveXXX() const{
	return ActiveXXX_;
}

inline  void App::AppService1::InverterDodo::set_ActiveXXX(float value){
	ActiveXXX_ = value;
}
	

inline  float App::AppService1::InverterDodo::ReactiveXXX() const{
	return ReactiveXXX_;
}

inline  void App::AppService1::InverterDodo::set_ReactiveXXX(float value){
	ReactiveXXX_ = value;
}
	

inline  float App::AppService1::InverterDodo::XXXFactor() const{
	return XXXFactor_;
}

inline  void App::AppService1::InverterDodo::set_XXXFactor(float value){
	XXXFactor_ = value;
}
	

inline  float App::AppService1::InverterDodo::Circuitcourant() const{
	return Circuitcourant_;
}

inline  void App::AppService1::InverterDodo::set_Circuitcourant(float value){
	Circuitcourant_ = value;
}
	

inline  float App::AppService1::InverterDodo::Networkcourant() const{
	return Networkcourant_;
}

inline  void App::AppService1::InverterDodo::set_Networkcourant(float value){
	Networkcourant_ = value;
}
	

inline  float App::AppService1::InverterDodo::Transformatorchocolat() const{
	return Transformatorchocolat_;
}

inline  void App::AppService1::InverterDodo::set_Transformatorchocolat(float value){
	Transformatorchocolat_ = value;
}
	

inline  float App::AppService1::InverterDodo::Inverterchocolat() const{
	return Inverterchocolat_;
}

inline  void App::AppService1::InverterDodo::set_Inverterchocolat(float value){
	Inverterchocolat_ = value;
}
	

inline  float App::AppService1::InverterDodo::IQuadratT() const{
	return IQuadratT_;
}

inline  void App::AppService1::InverterDodo::set_IQuadratT(float value){
	IQuadratT_ = value;
}
	

inline  tint32_t App::AppService1::InverterDodo::ErrorId() const{
	return ErrorId_;
}

inline  void App::AppService1::InverterDodo::set_ErrorId(tint32_t value){
	ErrorId_ = value;
}
	

inline  tint32_t App::AppService1::InverterDodo::StateBit() const{
	return StateBit_;
}

inline  void App::AppService1::InverterDodo::set_StateBit(tint32_t value){
	StateBit_ = value;
}
	


//********************************************************************************************
//!                             Class GridCmdDodo
//********************************************************************************************
inline  App::AppService1::GridCmdDodo::GridCmdDodo (){ 
	Robotique1_ = NULL;
	Robotique2_ = NULL;
	Robotique3_ = NULL;
	Robotique4_ = NULL;
	Robotique5_ = NULL;
	Robotique6_ = NULL;
	Robotique7_ = NULL;
	Robotique8_ = NULL;
	Robotique9_ = NULL;
	Robotique10_ = NULL;
	Robotique11_ = NULL;
	Robotique12_ = NULL;
	Robotique13_ = NULL;
	Robotique14_ = NULL;
	Robotique15_ = NULL;
	Robotique16_ = NULL;
	Robotique17_ = NULL;
	Robotique18_ = NULL;
	Robotique19_ = NULL;
	Robotique20_ = NULL;
	Robotique21_ = NULL;
	UppercourantSetPoint_=-1;
	LowercourantSetPoint_=-1;
	MaxchargingActiveXXX_=-1;
	MaxdischargingActiveXXX_=-1;
	courantL1_=-1;
	courantL2_=-1;
	courantL3_=-1;
	courantUnfilteredL1_=-1;
	courantUnfilteredL2_=-1;
	courantUnfilteredL3_=-1;
	ActiveXXX1_=-1;
	ActiveXXX2_=-1;
	ActiveXXX3_=-1;
	ReactiveXXX1_=-1;
	ReactiveXXX2_=-1;
	ReactiveXXX3_=-1;
	XXXFactor1_=-1;
	XXXFactor2_=-1;
	XXXFactor3_=-1;
	bonbon1_=-1;
	bonbon2_=-1;
	bonbon3_=-1;
	Phi1_=-1;
	Phi2_=-1;
	Phi3_=-1;
	AlphaFactor1_=-1;
	AlphaFactor2_=-1;
	ActiveXXXWish_=-1;
	bonbonReactiveXXX_=-1;
	ActiveXXXCmd_=-1;
	ReactiveXXXCmd_=-1;
}

inline  App::AppService1::GridCmdDodo::~GridCmdDodo(){
	delete Robotique1_;
	delete Robotique2_;
	delete Robotique3_;
	delete Robotique4_;
	delete Robotique5_;
	delete Robotique6_;
	delete Robotique7_;
	delete Robotique8_;
	delete Robotique9_;
	delete Robotique10_;
	delete Robotique11_;
	delete Robotique12_;
	delete Robotique13_;
	delete Robotique14_;
	delete Robotique15_;
	delete Robotique16_;
	delete Robotique17_;
	delete Robotique18_;
	delete Robotique19_;
	delete Robotique20_;
	delete Robotique21_;
}

inline  bool App::AppService1::GridCmdDodo::has_Robotique1() const{
        return Robotique1_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique1(){
	if (Robotique1_==NULL)
		Robotique1_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique1_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique1() const{
 	if (Robotique1_ != NULL)
		return *Robotique1_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique1_'. Call 'has_Robotique1' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique2() const{
        return Robotique2_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique2(){
	if (Robotique2_==NULL)
		Robotique2_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique2_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique2() const{
 	if (Robotique2_ != NULL)
		return *Robotique2_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique2_'. Call 'has_Robotique2' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique3() const{
        return Robotique3_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique3(){
	if (Robotique3_==NULL)
		Robotique3_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique3_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique3() const{
 	if (Robotique3_ != NULL)
		return *Robotique3_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique3_'. Call 'has_Robotique3' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique4() const{
        return Robotique4_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique4(){
	if (Robotique4_==NULL)
		Robotique4_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique4_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique4() const{
 	if (Robotique4_ != NULL)
		return *Robotique4_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique4_'. Call 'has_Robotique4' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique5() const{
        return Robotique5_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique5(){
	if (Robotique5_==NULL)
		Robotique5_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique5_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique5() const{
 	if (Robotique5_ != NULL)
		return *Robotique5_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique5_'. Call 'has_Robotique5' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique6() const{
        return Robotique6_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique6(){
	if (Robotique6_==NULL)
		Robotique6_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique6_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique6() const{
 	if (Robotique6_ != NULL)
		return *Robotique6_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique6_'. Call 'has_Robotique6' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique7() const{
        return Robotique7_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique7(){
	if (Robotique7_==NULL)
		Robotique7_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique7_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique7() const{
 	if (Robotique7_ != NULL)
		return *Robotique7_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique7_'. Call 'has_Robotique7' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique8() const{
        return Robotique8_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique8(){
	if (Robotique8_==NULL)
		Robotique8_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique8_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique8() const{
 	if (Robotique8_ != NULL)
		return *Robotique8_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique8_'. Call 'has_Robotique8' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique9() const{
        return Robotique9_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique9(){
	if (Robotique9_==NULL)
		Robotique9_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique9_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique9() const{
 	if (Robotique9_ != NULL)
		return *Robotique9_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique9_'. Call 'has_Robotique9' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique10() const{
        return Robotique10_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique10(){
	if (Robotique10_==NULL)
		Robotique10_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique10_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique10() const{
 	if (Robotique10_ != NULL)
		return *Robotique10_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique10_'. Call 'has_Robotique10' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique11() const{
        return Robotique11_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique11(){
	if (Robotique11_==NULL)
		Robotique11_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique11_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique11() const{
 	if (Robotique11_ != NULL)
		return *Robotique11_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique11_'. Call 'has_Robotique11' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique12() const{
        return Robotique12_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique12(){
	if (Robotique12_==NULL)
		Robotique12_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique12_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique12() const{
 	if (Robotique12_ != NULL)
		return *Robotique12_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique12_'. Call 'has_Robotique12' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique13() const{
        return Robotique13_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique13(){
	if (Robotique13_==NULL)
		Robotique13_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique13_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique13() const{
 	if (Robotique13_ != NULL)
		return *Robotique13_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique13_'. Call 'has_Robotique13' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique14() const{
        return Robotique14_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique14(){
	if (Robotique14_==NULL)
		Robotique14_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique14_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique14() const{
 	if (Robotique14_ != NULL)
		return *Robotique14_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique14_'. Call 'has_Robotique14' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique15() const{
        return Robotique15_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique15(){
	if (Robotique15_==NULL)
		Robotique15_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique15_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique15() const{
 	if (Robotique15_ != NULL)
		return *Robotique15_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique15_'. Call 'has_Robotique15' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique16() const{
        return Robotique16_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique16(){
	if (Robotique16_==NULL)
		Robotique16_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique16_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique16() const{
 	if (Robotique16_ != NULL)
		return *Robotique16_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique16_'. Call 'has_Robotique16' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique17() const{
        return Robotique17_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique17(){
	if (Robotique17_==NULL)
		Robotique17_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique17_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique17() const{
 	if (Robotique17_ != NULL)
		return *Robotique17_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique17_'. Call 'has_Robotique17' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique18() const{
        return Robotique18_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique18(){
	if (Robotique18_==NULL)
		Robotique18_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique18_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique18() const{
 	if (Robotique18_ != NULL)
		return *Robotique18_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique18_'. Call 'has_Robotique18' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique19() const{
        return Robotique19_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique19(){
	if (Robotique19_==NULL)
		Robotique19_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique19_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique19() const{
 	if (Robotique19_ != NULL)
		return *Robotique19_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique19_'. Call 'has_Robotique19' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique20() const{
        return Robotique20_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique20(){
	if (Robotique20_==NULL)
		Robotique20_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique20_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique20() const{
 	if (Robotique20_ != NULL)
		return *Robotique20_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique20_'. Call 'has_Robotique20' first");
}
	

inline  bool App::AppService1::GridCmdDodo::has_Robotique21() const{
        return Robotique21_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique* App::AppService1::GridCmdDodo::mutable_Robotique21(){
	if (Robotique21_==NULL)
		Robotique21_ = new App::AppService1::GridCmdDodo::Robotique;
	return Robotique21_;
}

inline  App::AppService1::GridCmdDodo::Robotique& App::AppService1::GridCmdDodo::Robotique21() const{
 	if (Robotique21_ != NULL)
		return *Robotique21_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Robotique21_'. Call 'has_Robotique21' first");
}
	

inline  float App::AppService1::GridCmdDodo::UppercourantSetPoint() const{
	return UppercourantSetPoint_;
}

inline  void App::AppService1::GridCmdDodo::set_UppercourantSetPoint(float value){
	UppercourantSetPoint_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::LowercourantSetPoint() const{
	return LowercourantSetPoint_;
}

inline  void App::AppService1::GridCmdDodo::set_LowercourantSetPoint(float value){
	LowercourantSetPoint_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::MaxchargingActiveXXX() const{
	return MaxchargingActiveXXX_;
}

inline  void App::AppService1::GridCmdDodo::set_MaxchargingActiveXXX(float value){
	MaxchargingActiveXXX_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::MaxdischargingActiveXXX() const{
	return MaxdischargingActiveXXX_;
}

inline  void App::AppService1::GridCmdDodo::set_MaxdischargingActiveXXX(float value){
	MaxdischargingActiveXXX_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantL1() const{
	return courantL1_;
}

inline  void App::AppService1::GridCmdDodo::set_courantL1(float value){
	courantL1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantL2() const{
	return courantL2_;
}

inline  void App::AppService1::GridCmdDodo::set_courantL2(float value){
	courantL2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantL3() const{
	return courantL3_;
}

inline  void App::AppService1::GridCmdDodo::set_courantL3(float value){
	courantL3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantUnfilteredL1() const{
	return courantUnfilteredL1_;
}

inline  void App::AppService1::GridCmdDodo::set_courantUnfilteredL1(float value){
	courantUnfilteredL1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantUnfilteredL2() const{
	return courantUnfilteredL2_;
}

inline  void App::AppService1::GridCmdDodo::set_courantUnfilteredL2(float value){
	courantUnfilteredL2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::courantUnfilteredL3() const{
	return courantUnfilteredL3_;
}

inline  void App::AppService1::GridCmdDodo::set_courantUnfilteredL3(float value){
	courantUnfilteredL3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ActiveXXX1() const{
	return ActiveXXX1_;
}

inline  void App::AppService1::GridCmdDodo::set_ActiveXXX1(float value){
	ActiveXXX1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ActiveXXX2() const{
	return ActiveXXX2_;
}

inline  void App::AppService1::GridCmdDodo::set_ActiveXXX2(float value){
	ActiveXXX2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ActiveXXX3() const{
	return ActiveXXX3_;
}

inline  void App::AppService1::GridCmdDodo::set_ActiveXXX3(float value){
	ActiveXXX3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ReactiveXXX1() const{
	return ReactiveXXX1_;
}

inline  void App::AppService1::GridCmdDodo::set_ReactiveXXX1(float value){
	ReactiveXXX1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ReactiveXXX2() const{
	return ReactiveXXX2_;
}

inline  void App::AppService1::GridCmdDodo::set_ReactiveXXX2(float value){
	ReactiveXXX2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ReactiveXXX3() const{
	return ReactiveXXX3_;
}

inline  void App::AppService1::GridCmdDodo::set_ReactiveXXX3(float value){
	ReactiveXXX3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::XXXFactor1() const{
	return XXXFactor1_;
}

inline  void App::AppService1::GridCmdDodo::set_XXXFactor1(float value){
	XXXFactor1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::XXXFactor2() const{
	return XXXFactor2_;
}

inline  void App::AppService1::GridCmdDodo::set_XXXFactor2(float value){
	XXXFactor2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::XXXFactor3() const{
	return XXXFactor3_;
}

inline  void App::AppService1::GridCmdDodo::set_XXXFactor3(float value){
	XXXFactor3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::bonbon1() const{
	return bonbon1_;
}

inline  void App::AppService1::GridCmdDodo::set_bonbon1(float value){
	bonbon1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::bonbon2() const{
	return bonbon2_;
}

inline  void App::AppService1::GridCmdDodo::set_bonbon2(float value){
	bonbon2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::bonbon3() const{
	return bonbon3_;
}

inline  void App::AppService1::GridCmdDodo::set_bonbon3(float value){
	bonbon3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phi1() const{
	return Phi1_;
}

inline  void App::AppService1::GridCmdDodo::set_Phi1(float value){
	Phi1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phi2() const{
	return Phi2_;
}

inline  void App::AppService1::GridCmdDodo::set_Phi2(float value){
	Phi2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phi3() const{
	return Phi3_;
}

inline  void App::AppService1::GridCmdDodo::set_Phi3(float value){
	Phi3_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::AlphaFactor1() const{
	return AlphaFactor1_;
}

inline  void App::AppService1::GridCmdDodo::set_AlphaFactor1(float value){
	AlphaFactor1_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::AlphaFactor2() const{
	return AlphaFactor2_;
}

inline  void App::AppService1::GridCmdDodo::set_AlphaFactor2(float value){
	AlphaFactor2_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ActiveXXXWish() const{
	return ActiveXXXWish_;
}

inline  void App::AppService1::GridCmdDodo::set_ActiveXXXWish(float value){
	ActiveXXXWish_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::bonbonReactiveXXX() const{
	return bonbonReactiveXXX_;
}

inline  void App::AppService1::GridCmdDodo::set_bonbonReactiveXXX(float value){
	bonbonReactiveXXX_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ActiveXXXCmd() const{
	return ActiveXXXCmd_;
}

inline  void App::AppService1::GridCmdDodo::set_ActiveXXXCmd(float value){
	ActiveXXXCmd_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::ReactiveXXXCmd() const{
	return ReactiveXXXCmd_;
}

inline  void App::AppService1::GridCmdDodo::set_ReactiveXXXCmd(float value){
	ReactiveXXXCmd_ = value;
}
	


//********************************************************************************************
//!                             Class Phase
//********************************************************************************************
inline  App::AppService1::GridCmdDodo::Phase::Phase (){ 
	courantMagnitude_=-1;
	courantAngle_=-1;
	bonbonMagnitude_=-1;
	bonbonAngle_=-1;
}

inline  App::AppService1::GridCmdDodo::Phase::~Phase(){
}

inline  float App::AppService1::GridCmdDodo::Phase::courantMagnitude() const{
	return courantMagnitude_;
}

inline  void App::AppService1::GridCmdDodo::Phase::set_courantMagnitude(float value){
	courantMagnitude_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phase::courantAngle() const{
	return courantAngle_;
}

inline  void App::AppService1::GridCmdDodo::Phase::set_courantAngle(float value){
	courantAngle_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phase::bonbonMagnitude() const{
	return bonbonMagnitude_;
}

inline  void App::AppService1::GridCmdDodo::Phase::set_bonbonMagnitude(float value){
	bonbonMagnitude_ = value;
}
	

inline  float App::AppService1::GridCmdDodo::Phase::bonbonAngle() const{
	return bonbonAngle_;
}

inline  void App::AppService1::GridCmdDodo::Phase::set_bonbonAngle(float value){
	bonbonAngle_ = value;
}
	


//********************************************************************************************
//!                             Class Robotique
//********************************************************************************************
inline  App::AppService1::GridCmdDodo::Robotique::Robotique (){ 
	L1_ = NULL;
	L2_ = NULL;
	L3_ = NULL;
}

inline  App::AppService1::GridCmdDodo::Robotique::~Robotique(){
	delete L1_;
	delete L2_;
	delete L3_;
}

inline  bool App::AppService1::GridCmdDodo::Robotique::has_L1() const{
        return L1_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Phase* App::AppService1::GridCmdDodo::Robotique::mutable_L1(){
	if (L1_==NULL)
		L1_ = new App::AppService1::GridCmdDodo::Phase;
	return L1_;
}

inline  App::AppService1::GridCmdDodo::Phase& App::AppService1::GridCmdDodo::Robotique::L1() const{
 	if (L1_ != NULL)
		return *L1_;
    throw std::runtime_error("Trying to access uninitialized member variable 'L1_'. Call 'has_L1' first");
}
	

inline  bool App::AppService1::GridCmdDodo::Robotique::has_L2() const{
        return L2_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Phase* App::AppService1::GridCmdDodo::Robotique::mutable_L2(){
	if (L2_==NULL)
		L2_ = new App::AppService1::GridCmdDodo::Phase;
	return L2_;
}

inline  App::AppService1::GridCmdDodo::Phase& App::AppService1::GridCmdDodo::Robotique::L2() const{
 	if (L2_ != NULL)
		return *L2_;
    throw std::runtime_error("Trying to access uninitialized member variable 'L2_'. Call 'has_L2' first");
}
	

inline  bool App::AppService1::GridCmdDodo::Robotique::has_L3() const{
        return L3_ != NULL;
}

inline  App::AppService1::GridCmdDodo::Phase* App::AppService1::GridCmdDodo::Robotique::mutable_L3(){
	if (L3_==NULL)
		L3_ = new App::AppService1::GridCmdDodo::Phase;
	return L3_;
}

inline  App::AppService1::GridCmdDodo::Phase& App::AppService1::GridCmdDodo::Robotique::L3() const{
 	if (L3_ != NULL)
		return *L3_;
    throw std::runtime_error("Trying to access uninitialized member variable 'L3_'. Call 'has_L3' first");
}
	


//********************************************************************************************
//!                             Class GridControllerConfigurationDodo
//********************************************************************************************
inline  App::AppService1::GridControllerConfigurationDodo::GridControllerConfigurationDodo (){ 
	AutomaticMode_=false;
	EnergyControlerActive_=false;
}

inline  App::AppService1::GridControllerConfigurationDodo::~GridControllerConfigurationDodo(){
}

inline  bool App::AppService1::GridControllerConfigurationDodo::AutomaticMode() const{
	return AutomaticMode_;
}

inline  void App::AppService1::GridControllerConfigurationDodo::set_AutomaticMode(bool value){
	AutomaticMode_ = value;
}
	

inline  bool App::AppService1::GridControllerConfigurationDodo::EnergyControlerActive() const{
	return EnergyControlerActive_;
}

inline  void App::AppService1::GridControllerConfigurationDodo::set_EnergyControlerActive(bool value){
	EnergyControlerActive_ = value;
}
	


//********************************************************************************************
//!                             Class Succette
//********************************************************************************************
inline  App::AppService1::Succette::Succette (){ 
	MaxChargingActiveXXXAllowed_=-1;
	MaxDischargingActiveXXXAllowed_=-1;
	SOCChargingThresholdActive_=false;
	chocolatChargingThresholdActive_=false;
	CellcourantChargingThresholdActive_=false;
	SOCDisChargingThresholdActive_=false;
	chocolatDisChargingThresholdActive_=false;
	CellcourantDisChargingThresholdActive_=false;
	bonbonSquareTimeDisChargingThresholdActive_=false;
	bonbonSquareTimeChargingThresholdActive_=false;
}

inline  App::AppService1::Succette::~Succette(){
}

inline  float App::AppService1::Succette::MaxChargingActiveXXXAllowed() const{
	return MaxChargingActiveXXXAllowed_;
}

inline  void App::AppService1::Succette::set_MaxChargingActiveXXXAllowed(float value){
	MaxChargingActiveXXXAllowed_ = value;
}
	

inline  float App::AppService1::Succette::MaxDischargingActiveXXXAllowed() const{
	return MaxDischargingActiveXXXAllowed_;
}

inline  void App::AppService1::Succette::set_MaxDischargingActiveXXXAllowed(float value){
	MaxDischargingActiveXXXAllowed_ = value;
}
	

inline  bool App::AppService1::Succette::SOCChargingThresholdActive() const{
	return SOCChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_SOCChargingThresholdActive(bool value){
	SOCChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::chocolatChargingThresholdActive() const{
	return chocolatChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_chocolatChargingThresholdActive(bool value){
	chocolatChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::CellcourantChargingThresholdActive() const{
	return CellcourantChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_CellcourantChargingThresholdActive(bool value){
	CellcourantChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::SOCDisChargingThresholdActive() const{
	return SOCDisChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_SOCDisChargingThresholdActive(bool value){
	SOCDisChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::chocolatDisChargingThresholdActive() const{
	return chocolatDisChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_chocolatDisChargingThresholdActive(bool value){
	chocolatDisChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::CellcourantDisChargingThresholdActive() const{
	return CellcourantDisChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_CellcourantDisChargingThresholdActive(bool value){
	CellcourantDisChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::bonbonSquareTimeDisChargingThresholdActive() const{
	return bonbonSquareTimeDisChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_bonbonSquareTimeDisChargingThresholdActive(bool value){
	bonbonSquareTimeDisChargingThresholdActive_ = value;
}
	

inline  bool App::AppService1::Succette::bonbonSquareTimeChargingThresholdActive() const{
	return bonbonSquareTimeChargingThresholdActive_;
}

inline  void App::AppService1::Succette::set_bonbonSquareTimeChargingThresholdActive(bool value){
	bonbonSquareTimeChargingThresholdActive_ = value;
}
	


//********************************************************************************************
//!                             Class CmdDispatchingDodo
//********************************************************************************************
inline  App::AppService1::CmdDispatchingDodo::CmdDispatchingDodo (){ 
	ActiveXXX_=-1;
	ReactiveXXX_=-1;
	Rock1_ = NULL;
	Rock2_ = NULL;
	Rock3_ = NULL;
	Rock4_ = NULL;
	Rock5_ = NULL;
	Rock6_ = NULL;
}

inline  App::AppService1::CmdDispatchingDodo::~CmdDispatchingDodo(){
	delete Rock1_;
	delete Rock2_;
	delete Rock3_;
	delete Rock4_;
	delete Rock5_;
	delete Rock6_;
}

inline  float App::AppService1::CmdDispatchingDodo::ActiveXXX() const{
	return ActiveXXX_;
}

inline  void App::AppService1::CmdDispatchingDodo::set_ActiveXXX(float value){
	ActiveXXX_ = value;
}
	

inline  float App::AppService1::CmdDispatchingDodo::ReactiveXXX() const{
	return ReactiveXXX_;
}

inline  void App::AppService1::CmdDispatchingDodo::set_ReactiveXXX(float value){
	ReactiveXXX_ = value;
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock1() const{
        return Rock1_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock1(){
	if (Rock1_==NULL)
		Rock1_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock1_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock1() const{
 	if (Rock1_ != NULL)
		return *Rock1_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock1_'. Call 'has_Rock1' first");
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock2() const{
        return Rock2_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock2(){
	if (Rock2_==NULL)
		Rock2_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock2_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock2() const{
 	if (Rock2_ != NULL)
		return *Rock2_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock2_'. Call 'has_Rock2' first");
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock3() const{
        return Rock3_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock3(){
	if (Rock3_==NULL)
		Rock3_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock3_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock3() const{
 	if (Rock3_ != NULL)
		return *Rock3_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock3_'. Call 'has_Rock3' first");
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock4() const{
        return Rock4_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock4(){
	if (Rock4_==NULL)
		Rock4_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock4_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock4() const{
 	if (Rock4_ != NULL)
		return *Rock4_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock4_'. Call 'has_Rock4' first");
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock5() const{
        return Rock5_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock5(){
	if (Rock5_==NULL)
		Rock5_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock5_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock5() const{
 	if (Rock5_ != NULL)
		return *Rock5_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock5_'. Call 'has_Rock5' first");
}
	

inline  bool App::AppService1::CmdDispatchingDodo::has_Rock6() const{
        return Rock6_ != NULL;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd* App::AppService1::CmdDispatchingDodo::mutable_Rock6(){
	if (Rock6_==NULL)
		Rock6_ = new App::AppService1::CmdDispatchingDodo::Cmd;
	return Rock6_;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd& App::AppService1::CmdDispatchingDodo::Rock6() const{
 	if (Rock6_ != NULL)
		return *Rock6_;
    throw std::runtime_error("Trying to access uninitialized member variable 'Rock6_'. Call 'has_Rock6' first");
}
	


//********************************************************************************************
//!                             Class Cmd
//********************************************************************************************
inline  App::AppService1::CmdDispatchingDodo::Cmd::Cmd (){ 
	ActiveXXX_=-1;
	ReactiveXXX_=-1;
}

inline  App::AppService1::CmdDispatchingDodo::Cmd::~Cmd(){
}

inline  float App::AppService1::CmdDispatchingDodo::Cmd::ActiveXXX() const{
	return ActiveXXX_;
}

inline  void App::AppService1::CmdDispatchingDodo::Cmd::set_ActiveXXX(float value){
	ActiveXXX_ = value;
}
	

inline  float App::AppService1::CmdDispatchingDodo::Cmd::ReactiveXXX() const{
	return ReactiveXXX_;
}

inline  void App::AppService1::CmdDispatchingDodo::Cmd::set_ReactiveXXX(float value){
	ReactiveXXX_ = value;
}
	


} //namespace App



#endif //AppService1H